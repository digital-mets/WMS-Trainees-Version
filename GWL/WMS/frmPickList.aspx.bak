<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="frmPickList.aspx.cs" Inherits="GWL.frmPickList" %>

<%@ Register Assembly="DevExpress.Web.v15.1, Version=15.1.12.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" Namespace="DevExpress.Web" TagPrefix="dx" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script src="../js/PerfSender.js" type="text/javascript"></script>
    <title>Picklist</title>
    <link rel="Stylesheet" type="text/css" href="~/css/styles.css" />
    <%--Link to global stylesheet--%>
    <!--#region Region CSS-->
    <style type="text/css">
        /*Stylesheet for separate forms (All those which has comments are the ones that can only be changed)*/
       #form1 {
        height: 1050px; /*Change this whenever needed*/
        }

               .Entry {
         padding: 20px;
         margin: 10px auto;
         background: #FFF;
         }

        .dxeButtonEditSys input,
        .dxeTextBoxSys input{
            text-transform:uppercase;
        }

         .pnl-content
        {
            text-align: right;
        }
    </style>
    <!--#endregion-->
     <!--#region Region Javascript-->
   <script>
       var isValid = true;
       var counterror = 0;


       function getParameterByName(name) {
           name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
           var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
               results = regex.exec(location.search);
           return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
       }


       var entry = getParameterByName('entry');

       function getParameterByName(name) {
           name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
           var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
               results = regex.exec(location.search);
           return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
       }

       var module = getParameterByName("transtype");
       var id = getParameterByName("docnumber");
       var entry = getParameterByName("entry");

       $(document).ready(function () {
           PerfStart(module, entry, id);
       });

       function OnValidation(s, e) { //Validation function for header controls (Set this for each header controls)
           if (s.GetText() == "" || e.value == "" || e.value == null) {
               counterror++;
               isValid = false
           }
           else {
               isValid = true;
           }
       }

       function OnUpdateClick(s, e) { //Add/Edit/Close button function
           var btnmode = btn.GetText(); //gets text of button

           gvocn.batchEditApi.EndEdit();

           if (isValid && counterror < 1 || btnmode == "Close") { //check if there's no error then proceed to callback
               //Sends request to server side
               if (btnmode == "Add") {
                   cp.PerformCallback("Add");
               }
               else if (btnmode == "Update") {
                   cp.PerformCallback("Update");
               }
               else if (btnmode == "Close") {
                   cp.PerformCallback("Close");
               }
           }
           else {
               counterror = 0;
               alert('Please check all the fields!');
           }

           if (btnmode == "Delete") {
               cp.PerformCallback("Delete");
           }
       }

       function OnConfirm(s, e) {//function upon saving entry

           if (e.requestTriggerID === "cp" || e.requestTriggerID === undefined)//disables confirmation message upon saving.
               e.cancel = true;
       }

       function gridView_EndCallback(s, e) {//End callback function if (s.cp_success) {
           if (s.cp_success) {
               alert(s.cp_message);
               delete (s.cp_success);//deletes cache variables' data
               delete (s.cp_message);
               if (s.cp_forceclose) {//NEWADD
                   delete (s.cp_forceclose);
                   window.close();
               }
           }

           if (s.cp_close) {
               if (s.cp_message != null) {
                   alert(s.cp_message);
                   delete (s.cp_message);
               }
               if (s.cp_valmsg != null) {
                   alert(s.cp_valmsg);
                   delete (s.cp_valmsg);
               }
               if (glcheck.GetChecked()) {
                   delete (cp_close);
                   window.location.reload();
               }
               else {
                   delete (cp_close);
                   window.close();//close window if callback successful
               }
           }
           if (s.cp_delete) {
               delete (cp_delete);
               DeleteControl.Show();
           }
       }

       var evn;
       var index;
       var index2;
       var valchange;
       var valchange2;
       var valchange3;
       var val;
       var temp;
       var bulkqty;
       var copyFlag;
       var itemc; //variable required for lookup
       var colorc;
       var sizec;
       var classc;
       var unitc;
       var currentColumn = null;
       var isSetTextRequired = false;
       var linecount = 1;
       function OnStartEditing(s, e) {//On start edit grid function     
           if (entry != "V") {
               currentColumn = e.focusedColumn;
               var cellInfo = e.rowValues[e.focusedColumn.index];
               itemc = s.batchEditApi.GetCellValue(e.visibleIndex, "ItemCode"); //needed var for all lookups; this is where the lookups vary for
               colorc = s.batchEditApi.GetCellValue(e.visibleIndex, "ColorCode");
               classc = s.batchEditApi.GetCellValue(e.visibleIndex, "ClassCode");
               sizec = s.batchEditApi.GetCellValue(e.visibleIndex, "SizeCode");
               unitc = s.batchEditApi.GetCellValue(e.visibleIndex, "Unit");
               bulkqty = s.batchEditApi.GetCellValue(e.visibleIndex, "BulkQty");

               if (bulkqty == null) {
                   bulkqty = 0;
               }

               //needed var for all lookups; this is where the lookups vary for
               //if (e.visibleIndex < 0) {//new row
               //    var linenumber = s.GetColumnByField("LineNumber");
               //    e.rowValues[linenumber.index].value = linecount++; // or any other default value
               //}


               if (copyFlag) {
                   copyFlag = false;
                   for (var i = 0; i < s.GetColumnsCount() ; i++) {
                       var column = s.GetColumn(i);
                       if (column.visible == false || column.fieldName == undefined)
                           continue;
                       ProcessCells(0, e, column, s);
                   }
               }

               if (chckAutoPick.GetChecked() == true) {
                   if (e.focusedColumn.fieldName !== "Qty" && e.focusedColumn.fieldName !== "BulkQty" && e.focusedColumn.fieldName !== "ToLocation") {
                       e.cancel = true;
                   }
               }

               bulkqty = s.batchEditApi.GetCellValue(e.visibleIndex, "BulkQty");

               if (bulkqty == null) {
                   bulkqty = 0;
               }

               if (e.focusedColumn.fieldName === "ItemCode") { //Check the column name
                   gl.GetInputElement().value = cellInfo.value; //Gets the column value
                   isSetTextRequired = true;
                   index = e.visibleIndex;
               }
               if (e.focusedColumn.fieldName === "ColorCode") {
                   gl2.GetInputElement().value = cellInfo.value;
               }
               if (e.focusedColumn.fieldName === "ClassCode") {
                   gl3.GetInputElement().value = cellInfo.value;
               }
               if (e.focusedColumn.fieldName === "SizeCode") {
                   gl4.GetInputElement().value = cellInfo.value;
               }
               if (e.focusedColumn.fieldName === "BulkQty") {
                   index = e.visibleIndex;
               }

             
               if (e.focusedColumn.fieldName === "ToLocation") {
                   gl6.GetInputElement().value = cellInfo.value;
               }

               if (e.focusedColumn.fieldName === "BulkUnit") {
                   isSetTextRequired = true;
                   glBulkUnit.GetInputElement().value = cellInfo.value;
               }
               if (e.focusedColumn.fieldName === "Unit") {
                   isSetTextRequired = true;
                   glUnit.GetInputElement().value = cellInfo.value;
               }
               if (e.focusedColumn.fieldName === "PalletID") {
                   glpallet.GetInputElement().value = cellInfo.value;
                   isSetTextRequired = true;
                   index = e.visibleIndex;
               }

           }
       }


       var itemc; //variable required for lookup
       var currentColumn = null;
       var isSetTextRequired = false;
       var linecount = 1;
       function OnStartEditings(s, e) {
           currentColumn = e.focusedColumn;
           var cellInfo = e.rowValues[e.focusedColumn.index];
           itemc = s.batchEditApi.GetCellValue(e.visibleIndex, "ItemCode");
           if (entry == "V") {
               e.cancel = true; //this will made the gridview readonly
           }
           if (entry != "V") {
               if (e.focusedColumn.fieldName === "OCNNumber") {
                   glocn.GetInputElement().value = cellInfo.value;
                   isSetTextRequired = true;
               }
           }
       }
       function ProcessCells(selectedIndex, e, column, s) {
           if (selectedIndex == 0) {
               if (column.fieldName == e.focusedColumn.fieldName)
                   e.rowValues[column.index].value = s.batchEditApi.GetCellValue(index, column.fieldName);
               else
                   s.batchEditApi.SetCellValue(e.visibleIndex, column.fieldName, s.batchEditApi.GetCellValue(index, column.fieldName));
           }
       }
       function OnEndEditing(s, e) {//end edit grid function, sets text after select/leaving the current lookup
           if (entry != "V") {
               var cellInfo = e.rowValues[currentColumn.index];
               if (currentColumn.fieldName === "ItemCode") {
                   cellInfo.value = gl.GetValue();
                   cellInfo.text = gl.GetText().toUpperCase();
               }
               if (currentColumn.fieldName === "ColorCode") {
                   cellInfo.value = gl2.GetValue();
                   cellInfo.text = gl2.GetText().toUpperCase();
               }
               if (currentColumn.fieldName === "ClassCode") {
                   cellInfo.value = gl3.GetValue();
                   cellInfo.text = gl3.GetText().toUpperCase();
               }
               if (currentColumn.fieldName === "SizeCode") {
                   cellInfo.value = gl4.GetValue();
                   cellInfo.text = gl4.GetText().toUpperCase();
               }

               if (currentColumn.fieldName === "BulkQty") {
                   index2 = index;
               }
               if (currentColumn.fieldName === "BulkUnit") {
                   cellInfo.value = glBulkUnit.GetValue();
                   cellInfo.text = glBulkUnit.GetText();
               }
               if (currentColumn.fieldName === "Unit") {
                   cellInfo.value = glUnit.GetValue();
                   cellInfo.text = glUnit.GetText();
               }
               if (currentColumn.fieldName === "OCNNumber") {
                   cellInfo.value = glocn.GetValue();
                   cellInfo.text = glocn.GetText().toUpperCase();
               }
            
               if (currentColumn.fieldName === "ToLocation") {
                   cellInfo.value = gl6.GetValue();
                   cellInfo.text = gl6.GetText();
               }
               if (currentColumn.fieldName === "PalletID") {
                   cellInfo.value = glpallet.GetValue();
                   cellInfo.text = glpallet.GetText().toUpperCase();
               }
           }
       }
       function OnEndEditings(s, e) {//end edit grid function, sets text after select/leaving the current lookup
           var cellInfo = e.rowValues[currentColumn.index];


           if (currentColumn.fieldName === "OCNNumber") {
               cellInfo.value = glocn.GetValue();
               cellInfo.text = glocn.GetText().toUpperCase();
           }

       }

       function GridEnd(s, e) {
           //console.log('gridend');
           val = s.GetGridView().cp_codes;

           
           if (val != null) {

               temp = val.split(';');
           }
           if (valchange) {
               valchange = false;
               var column = gv1.GetColumn(6);

               ProcessCells2(0, index2, column, gv1);
           }
           if (valchange3) {
               valchange3 = false;

               var column = gv1.GetColumn(6);

               ProcessCells4(0, index, column, gv1);
           }


           if (valchange2) {
               valchange2 = false;

               for (var i = 0; i < gv1.GetColumnsCount() ; i++) {
                   var column = gv1.GetColumn(i);
                   if (column.visible == false || column.fieldName == undefined)
                       continue;

                   ProcessCells3(0, index, column, gv1);
                   console.log(index);
               }
               gv1.batchEditApi.EndEdit();
           }
           loader.Hide();
       }

       function ProcessCells2(selectedIndex, focused, column, s) {//Auto calculate qty function :D
           if (val == null) {
               val = ";";
               temp = val.split(';');
           }
           if (temp[0] == null) {
               temp[0] = 0;
           }
           if (selectedIndex == 0) {
               s.batchEditApi.SetCellValue(focused, "Qty", temp[0]);
           }
       }

       function ProcessCells4(selectedIndex, focused, column, s) {//Auto calculate qty function :D
           if (val == null) {
               val = ";";
               temp = val.split(';');
           }
           
           if (temp[0] == null) {
               temp[0] = 0;
           }
           if (temp[1] == null) {
               temp[1] = 0;
           }
          

           if (selectedIndex == 0) {
              
               s.batchEditApi.SetCellValue(focused, "Qty", temp[0]);
      
               s.batchEditApi.SetCellValue(focused, "BulkQty", temp[1]);
               s.batchEditApi.SetCellValue(focused, "PalletID", temp[2]);
           }
       }

       function ProcessCells3(selectedIndex, e, column, s) {//Auto Color,class,size,full desc, qty function :D
           if (val == null) {
               val = ";;;;;";
               temp = val.split(';');
           }
           if (temp[0] == null || temp[0] == "") {
               temp[0] = "";
           }
           if (temp[1] == null || temp[1] == "") {
               temp[1] = "";
           }
           if (temp[2] == null || temp[2] == "") {
               temp[2] = "";
           }
           if (temp[3] == null || temp[3] == "") {
               temp[3] = "";
           }
           if (temp[4] == null || temp[4] == "") {
               temp[4] = "";
           }
           if (temp[5] == null || temp[5] == "") {
               temp[5] = "";
           }
           if (temp[6] == null || temp[6] == "") {
               temp[6] = 0;
           }
           if (selectedIndex == 0) {

               if (column.fieldName == "ColorCode") {
                   s.batchEditApi.SetCellValue(index, column.fieldName, temp[0]);
                   console.log(index);
                   console.log(column.fieldName);
                   console.log(temp[0]);
               }
               if (column.fieldName == "ClassCode") {
                   s.batchEditApi.SetCellValue(index, column.fieldName, temp[1]);

               }
               if (column.fieldName == "SizeCode") {
                   s.batchEditApi.SetCellValue(index, column.fieldName, temp[2]);

               }
               if (column.fieldName == "FullDesc") {
                   s.batchEditApi.SetCellValue(index, column.fieldName, temp[3]);

               }
               if (column.fieldName == "BulkUnit") {
                   s.batchEditApi.SetCellValue(index, column.fieldName, temp[4]);

               }
               if (column.fieldName == "Unit") {
                   s.batchEditApi.SetCellValue(index, column.fieldName, temp[5]);

               }
               if (column.fieldName == "Qty") {
                   s.batchEditApi.SetCellValue(index, column.fieldName, temp[6]);

               }
           }
       }

       function lookup(s, e) {
           if (isSetTextRequired) {//Sets the text during lookup for item code
               s.SetText(s.GetInputElement().value);
               isSetTextRequired = false;
           }
       }

       //var preventEndEditOnLostFocus = false;
       function gridLookup_KeyDown(s, e) { //Allows tabbing between gridlookup on details
           isSetTextRequired = false;
           var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
           if (keyCode !== 9) return;
           var moveActionName = e.htmlEvent.shiftKey ? "MoveFocusBackward" : "MoveFocusForward";
           if (gv1.batchEditApi[moveActionName]()) {
               ASPxClientUtils.PreventEventAndBubble(e.htmlEvent);
           }
       }

       function gridLookup_KeyPress(s, e) { //Prevents grid refresh when a user press enter key for every column
           var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
           if (keyCode == 13)
               gv1.batchEditApi.EndEdit();
           //ASPxClientUtils.PreventEventAndBubble(e.htmlEvent);
       }

       function gridLookup_CloseUp(s, e) { //Automatically leaves the current cell if an item is selected.
           setTimeout(function () {
               gv1.batchEditApi.EndEdit();
           }, 1000);
       }


       function gridLookup_KeyDown2(s, e) { //Allows tabbing between gridlookup on details
           isSetTextRequired = false;
           var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
           if (keyCode !== ASPxKey.Tab) return;
           var moveActionName = e.htmlEvent.shiftKey ? "MoveFocusBackward" : "MoveFocusForward";
           if (gvocn.batchEditApi[moveActionName]()) {
               ASPxClientUtils.PreventEventAndBubble(e.htmlEvent);
           }
       }

       function gridLookup_KeyPress2(s, e) { //Prevents grid refresh when a user press enter key for every column
           var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
           if (keyCode == ASPxKey.Enter)
               gvocn.batchEditApi.EndEdit();
           //ASPxClientUtils.PreventEventAndBubble(e.htmlEvent);
       }

       function gridLookup_CloseUp2(s, e) { //Automatically leaves the current cell if an item is selected.
           setTimeout(function () {
               gvocn.batchEditApi.EndEdit();
           }, 1000);
       }

       //validation
       function Grid_BatchEditRowValidating(s, e) {//Client side validation. Check empty fields. (only visible fields)
           for (var i = 0; i < gv1.GetColumnsCount() ; i++) {
               var column = s.GetColumn(i);
               if (column.fieldName == "ItemCode" || column.fieldName == "Unit") {//Set to skip all unnecessary columns that doesn't need validation//Column index needed to set //Example for Qty
                   var cellValidationInfo = e.validationInfo[column.index];
                   if (!cellValidationInfo) continue;
                   var value = cellValidationInfo.value;
                   if (!ASPxClientUtils.IsExists(value) || ASPxClientUtils.Trim(value) == "") {
                       cellValidationInfo.isValid = false;
                       cellValidationInfo.errorText = column.fieldName + " is required";
                       isValid = false;

                   }
               }
           }
       }
       //function getParameterByName(name) {
       //    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
       //    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
       //        results = regex.exec(location.search);
       //    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
       //}

       function OnCustomClick(s, e) {
           if (e.buttonID == "Details") {
               var itemcode = s.batchEditApi.GetCellValue(e.visibleIndex, "ItemCode");
               var colorcode = s.batchEditApi.GetCellValue(e.visibleIndex, "ColorCode");
               var classcode = s.batchEditApi.GetCellValue(e.visibleIndex, "ClassCode");
               var sizecode = s.batchEditApi.GetCellValue(e.visibleIndex, "SizeCode");
               factbox.SetContentUrl('../FactBox/fbItem.aspx?itemcode=' + itemcode
               + '&colorcode=' + colorcode + '&classcode=' + classcode + '&sizecode=' + sizecode);
           }
           if (e.buttonID == "CountSheet") {
               CSheet.Show();
               var linenum = s.batchEditApi.GetCellValue(e.visibleIndex, "LineNumber");
               var docnumber = getParameterByName('docnumber');
               var transtype = getParameterByName('transtype');
               var entry = getParameterByName('entry');
               if (chckAutoPick.GetChecked() == true) {
                   CSheet.SetContentUrl('frmCountSheet.aspx?entry=' + entry + '&docnumber=' + docnumber + '&transtype=' + transtype +
                        '&linenumber=' + linenum + '&type=Putaway', '_blank');
               }
               else {
                   CSheet.SetContentUrl('frmCountSheet.aspx?entry=' + entry + '&docnumber=' + docnumber + '&transtype=' + transtype +
                       '&linenumber=' + linenum);
               }
           }
           if (e.buttonID == "CopyButton") {
               var num = clone.GetText();
               for (i = 1; i <= num; i++) {
                   index = e.visibleIndex;
                   copyFlag = true;

                   s.AddNewRow();
               }
           }
       }
       function OnInitTrans(s, e) {
           AdjustSize();
       }

       function OnControlsInitialized(s, e) {
           ASPxClientUtils.AttachEventToElement(window, "resize", function (evt) {
               AdjustSize();
           });
       }

       function AdjustSize() {
           var width = Math.max(0, document.documentElement.clientWidth);
           var height = Math.max(0, document.documentElement.clientHeight);
           gv1.SetWidth(width - 120);
           gv1.SetHeight(height - 290);

           
       }


       function DeleteDetail(s, e) {


           var indicies = gv1.batchEditHelper.GetDataRowIndices();

           var indicies1 = gvocn.batchEditHelper.GetDataRowIndices();


           for (var i = 0; i < indicies.length; i++) {
               if (gv1.batchEditHelper.IsNewRow(indicies[i])) {

                   gv1.DeleteRow(indicies[i]);
               }


               else {
                   var key = gv1.GetRowKey(indicies[i]);
                   if (gv1.batchEditHelper.IsDeletedRow(key))
                       console.log("deleted row " + indicies[i]);
                   else {
                       gv1.DeleteRow(indicies[i]);

                   }
               }
           }
           for (var i = 0; i < indicies1.length; i++) {
               if (gvocn.batchEditHelper.IsNewRow(indicies1[i])) {

                   gvocn.DeleteRow(indicies1[i]);
               }


               else {
                   var key = gvocn.GetRowKey(indicies1[i]);
                   if (gvocn.batchEditHelper.IsDeletedRow(key))
                       console.log("deleted row " + indicies1[i]);
                   else {
                       gvocn.DeleteRow(indicies1[i]);

                   }
               }
           }




       }


    </script>
    <!--#endregion-->
</head>
<body style="height: 910px">    
    <dx:ASPxGlobalEvents ID="ge" runat="server">
        <ClientSideEvents ControlsInitialized="OnControlsInitialized" />
    </dx:ASPxGlobalEvents>
<form id="form1" runat="server" class="Entry">
                        <dx:ASPxPanel id="toppanel" runat="server" FixedPositionOverlap="true" fixedposition="WindowTop" backcolor="#2A88AD" Height="30px">
                        <PanelCollection>
                            <dx:PanelContent runat="server" SupportsDisabledAttribute="True">
                                <dx:ASPxLabel runat="server" Text="Picklist" Font-Bold="true" ForeColor="White"  Font-Size="X-Large"></dx:ASPxLabel>
                            </dx:PanelContent>
                        </PanelCollection>
                    </dx:ASPxPanel>
        &nbsp;&nbsp;&nbsp;
        <%--<!--#region Region Factbox --> --%>
        <dx:ASPxPopupControl ID="popup" runat="server" AllowDragging="True" AllowResize="True" ClientInstanceName="factbox" CloseAction="None" 
        EnableViewState="False" HeaderText="Item info" Height="207px" Width="245px" PopupHorizontalOffset="1085" PopupVerticalOffset="90"
         ShowCloseButton="False" ShowCollapseButton="True" ShowOnPageLoad="True" ShowPinButton="True" ShowShadow="True">
        <ContentCollection>
            <dx:PopupControlContentControl runat="server">
            </dx:PopupControlContentControl>
        </ContentCollection>
        </dx:ASPxPopupControl>
        <%--<!--#endregion --> --%>
                <dx:ASPxPopupControl ID="CSheet" Theme="Aqua" runat="server" AllowDragging="True" ClientInstanceName="CSheet" CloseAction="CloseButton" CloseOnEscape="true"
        EnableViewState="False" HeaderImage-Height="10px" HeaderText="" Height="600px" ShowHeader="true" Width="950px" PopupHorizontalAlign="WindowCenter" PopupVerticalAlign="WindowCenter" 
         ShowCloseButton="true" ShowOnPageLoad="false" ShowShadow="True" Modal="true" ContentStyle-HorizontalAlign="Center">
        <ContentCollection>
            <dx:PopupControlContentControl runat="server">
            </dx:PopupControlContentControl>
        </ContentCollection>
        <ClientSideEvents CloseUp="function (s, e) { cp.PerformCallback('refgrid') }" />
    </dx:ASPxPopupControl>
      
        <dx:ASPxCallbackPanel ID="cp" runat="server" Width="806px" Height="641px" ClientInstanceName="cp" OnCallback="cp_Callback">
            <ClientSideEvents EndCallback="gridView_EndCallback"></ClientSideEvents>
            <PanelCollection>
                <dx:PanelContent runat="server" SupportsDisabledAttribute="True">
                    <dx:ASPxFormLayout ID="frmlayout1" runat="server" Width="850px"  Style="margin-left: -3px; margin-right: 0px;">
                          <SettingsAdaptivity AdaptivityMode="SingleColumnWindowLimit" SwitchToSingleColumnAtWindowInnerWidth="600" />

                        <Items>
                            <%--<!--#region Region Header --> --%>
                            
                            <dx:TabbedLayoutGroup>
                                <Items>
                                    <dx:LayoutGroup Caption="General" ColCount="2">
                                        <Items>
                                            <dx:LayoutItem Caption="Document Number:" Name="DocNumber">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtDocnumber" runat="server" Width="170px" ReadOnly="true">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Document Date:" Name="DocDate" ColSpan="2">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxDateEdit ID="dtpdocdate" runat="server" Width="170px" OnInit="dtpDocDate_Init"  OnLoad="Date_Load">
                                                             <ClientSideEvents Validation="OnValidation"  />
                                                            <ValidationSettings Display="None" ValidateOnLeave="true" ErrorDisplayMode="ImageWithTooltip" >
                                                                <RequiredField IsRequired="True"/>
                                                            </ValidationSettings>
                                                            <InvalidStyle BackColor="Pink">
                                                            </InvalidStyle>
                                                        </dx:ASPxDateEdit>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>

                                                <dx:LayoutItem Caption="Status:" Name="txtstatuscode" >                                                <LayoutItemNestedControlCollection>
                                                   <dx:LayoutItemNestedControlContainer runat="server">
                                                       <dx:ASPxTextBox ID="txtstatuscode" runat="server" Width="170px" text="NEW" Enabled="False" OnLoad="TextboxLoad">
                                                       </dx:ASPxTextBox>
                                                   </dx:LayoutItemNestedControlContainer>
                                               </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>

                                                
                                                    <dx:LayoutItem Caption="Delivery Date" Name="DeliveryDate" ColSpan="2">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">

                                                        <dx:ASPxDateEdit ID="dtpdeliverydate" runat="server"  OnLoad="Date_Load" Width="170px" >
                                                               <ClientSideEvents Validation="OnValidation" Init="function(s,e){ s.SetDate(new Date());}" />
                                                        </dx:ASPxDateEdit>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>

                                            <dx:LayoutItem Caption="Customer Code" Name="Customer">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxGridLookup ID="txtCustomercode"    ClientInstanceName="glcustomer"  Width="170px" runat="server" DataSourceID="Masterfilebizcustomer" KeyFieldName="BizPartnerCode" OnLoad="LookupLoad" TextFormatString="{0}"  OnValueChanged="txtCustomercode_ValueChanged">
                                                           
                                                               <GridViewProperties Settings-ShowFilterRow="true">
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True"
                                                                            AllowSelectSingleRowOnly="True" />
                                                                    </GridViewProperties>

                                                                          


                                                                   <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="BizPartnerCode" Caption="Customer" ReadOnly="True" VisibleIndex="0"    >
                                                                  <Settings AutoFilterCondition="Contains" />
                                                                              </dx:GridViewDataTextColumn>
                                                                    </Columns>
                                                              <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="Name" Caption="Name" Width="200px" ReadOnly="True" VisibleIndex="0"    >
                                                                  <Settings AutoFilterCondition="Contains" />
                                                                              </dx:GridViewDataTextColumn>
                                                                    </Columns>

                                                            <ClientSideEvents Validation="OnValidation"      ValueChanged="function(s, e) {
                                                                   var grid = glocn.GetGridView();
                                                                    glocn.GetGridView().PerformCallback(glpicktype.GetValue() + '|' + s.GetInputElement().value + '|' + txtwarehousecode.GetValue() + '|' + '' 
                                                                );
                                                                  DeleteDetail(s,e);
                                                                }" /> 
                                                            <ValidationSettings Display="None" ErrorDisplayMode="ImageWithTooltip">
                                                                <RequiredField IsRequired="True" />
                                                            </ValidationSettings>
                                                            <InvalidStyle BackColor="Pink">
                                                            </InvalidStyle>
                                                        </dx:ASPxGridLookup>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                        <dx:LayoutItem Caption="Picklist Type:" Name="PiclistType" ColSpan="2">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxComboBox ID="cbxPickListType" ClientInstanceName="glpicktype"  Width="170px" runat="server" OnLoad="Comboboxload" >
                                                            <Items>
                                                                <dx:ListEditItem Text="Pick From Reserved" Value="Pick From Reserved" />
                                                                <dx:ListEditItem Text="Pick From Normal" Value="Pick From Normal" />
                                                            </Items>
                                                            <ClientSideEvents ValueChanged="function(s, e) {
                                                                   var grid = glocn.GetGridView();
                                                                    glocn.GetGridView().PerformCallback(s.GetInputElement().value + '|' + glcustomer.GetValue() + '|' + txtwarehousecode.GetValue() + '|' + '');
                                                                  
                                                                }"/>
                                                               <ValidationSettings Display="None" ErrorDisplayMode="ImageWithTooltip">
                                                                <RequiredField IsRequired="True" />
                                                            </ValidationSettings>
                                                            <InvalidStyle BackColor="Pink">
                                                            </InvalidStyle>
                                                        </dx:ASPxComboBox>
                                                    </dx:LayoutItemNestedControlContainer>
</LayoutItemNestedControlCollection>
                                                                                            </dx:LayoutItem>
                                        
                                            <dx:LayoutItem Caption="Warehouse Code:" Name="WarehouseCode">
                                                  <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxGridLookup ClientInstanceName="txtwarehousecode" ID="txtwarehousecode" Width="170px" runat="server" DataSourceID="Warehouse"  KeyFieldName="WarehouseCode" OnLoad="LookupLoad" TextFormatString="{0}" OnTextChanged="glWarehouseCOde_TextChanged">
                                                            <GridViewProperties>
                                                                <SettingsBehavior AllowFocusedRow="True" AllowSelectSingleRowOnly="True" AllowSelectByRowClick="True" />
                                                            </GridViewProperties>
                                                            <%--<ClientSideEvents Validation="OnValidation" ValueChanged="function(s, e) {--%>
<%--                                                                   var grid = glplant.GetGridView();
                                                                  var grid = glroomcode.GetGridView();
                                                                    glplant.GetGridView().PerformCallback(s.GetInputElement().value);
                                                                
                                                                    glroomcode.GetGridView().PerformCallback(  s.GetInputElement().value + '|' + glplant.GetValue()   );
                                                                }" DropDown="function(s, e) {
                                                                   var grid = glocn.GetGridView();
                                                                    glocn.GetGridView().PerformCallback(glpicktype.GetValue() + '|' + glcustomer.GetValue() + '|' + s.GetInputElement().value + '|' + glplant.GetValue());
                                                                  
                                                                }"/>--%>
                                                             <ClientSideEvents Validation="OnValidation"  DropDown="function(s, e) {
                                                                   var grid = glocn.GetGridView();
                                                                    glocn.GetGridView().PerformCallback(glpicktype.GetValue() + '|' + glcustomer.GetValue() + '|' + s.GetInputElement().value + '|' + '');
                                                                  
                                                                }"/>
                                                            <ValidationSettings Display="None" ValidateOnLeave="true" ErrorDisplayMode="ImageWithTooltip">
                                                                <RequiredField IsRequired="True"/>
                                                            </ValidationSettings>
                                                            <InvalidStyle BackColor="Pink">
                                                            </InvalidStyle>
                                                            <GridViewProperties>
                                                                <SettingsBehavior AllowFocusedRow="True" AllowSelectSingleRowOnly="True" />
                                                            </GridViewProperties>
                                                        </dx:ASPxGridLookup>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                        
                                            
                                            <dx:LayoutItem Caption="Remarks:" Name="Remarks">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtremarks" runat="server" OnLoad="TextboxLoad" Width="170px">
                                                        </dx:ASPxTextBox>
                                                       
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Outbound No:" Name="OutboundNo" ColSpan="2">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtOutboundNo" runat="server" Width="170px" OnLoad="TextboxLoad" Enabled="False" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>


                                                  <dx:LayoutItem Caption="Clone #">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtClone" runat="server" Width="170px" ClientInstanceName="clone">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>


                                            <dx:LayoutItem Caption="AutoPick">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxCheckBox ID="chckAutoPick" ClientInstanceName="chckAutoPick" runat="server" CheckState="Unchecked">
                                                        </dx:ASPxCheckBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>

                                                <dx:LayoutItem Caption="StorageType">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxGridLookup ID="glStorageType" runat="server" AutoGenerateColumns="False" ClientInstanceName="glStorageType" DataSourceID="StorageSrc" KeyFieldName="StorageType" OnLoad="LookupLoad" TextFormatString="{0}" Width="170px">
                                                                    <GridViewProperties>
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True" AllowSelectSingleRowOnly="True" />
                                                                        <Settings ShowFilterRow="True" />
                                                                    </GridViewProperties>
                                                                    <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="StorageType" ShowInCustomizationForm="True" VisibleIndex="1" Width="50px">
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn FieldName="StorageDescription" ShowInCustomizationForm="True" VisibleIndex="1" Width="50px">
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                    </Columns>
                                                                  
                                                                </dx:ASPxGridLookup>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>

                                        </Items>
                                    </dx:LayoutGroup>

                                    <dx:LayoutGroup Caption="Delivery and Trucking Info" ColCount="2">
                                        <Items>
                                                
                                            <dx:LayoutItem Caption="Deliver To (Address):" >
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtAddress" runat="server" Width="170px" ColCount="1" OnLoad="TextboxLoad">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                                 </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Trucking Company:"  >
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtTruckingCompany" runat="server" OnLoad="TextboxLoad" Width="170px" ColCount="1">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                                 </dx:LayoutItem>

                                            <dx:LayoutItem Caption="Plate Number:">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtPlateNumber" runat="server" Width="170px"  OnLoad="TextboxLoad" ColCount="1">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                                 </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Driver Name:" >
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtDriverName" runat="server" Width="170px"  OnLoad="TextboxLoad" ColCount="1">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                                 </dx:LayoutItem>
                                        

                                             </Items>
                                    </dx:LayoutGroup>

                                    <dx:LayoutGroup Caption="User Defined" ColCount="2">
                                        <Items>
                                            <dx:LayoutItem Caption="Field1">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField1" runat="server" Width="170px">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                           
                                            <dx:LayoutItem Caption="Field2">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField2" runat="server" Width="170px">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                              
                                            <dx:LayoutItem Caption="Field3">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField3" runat="server" Width="170px">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
             
                                            <dx:LayoutItem Caption="Field4">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField4" runat="server" Width="170px">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                             
                                            <dx:LayoutItem Caption="Field5">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField5" runat="server" Width="170px">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                             <dx:LayoutItem Caption="Field6">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField6" runat="server" Width="170px">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                                          <dx:LayoutItem Caption="Field7">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField7" runat="server" Width="170px">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                                  <dx:LayoutItem Caption="Field8">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField8" runat="server" Width="170px">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                                           <dx:LayoutItem Caption="Field9">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField9" runat="server" Width="170px">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                        </Items>
                                    </dx:LayoutGroup>

                                       <dx:LayoutGroup Caption="Audit Trail" ColSpan="2" ColCount="2">
                                        <Items>
                                          <dx:LayoutItem Caption="Added By:" >
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHAddedBy" runat="server" Width="170px" ColCount="1" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                               </dx:LayoutItem>
                                          <dx:LayoutItem Caption="Added Date:" >
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHAddedDate" runat="server" Width="170px" ColCount="1" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                               </dx:LayoutItem>
                                          <dx:LayoutItem Caption="Last Edited By:" >
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHLastEditedBy" runat="server" Width="170px" ColCount="1" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                               </dx:LayoutItem>
                                          <dx:LayoutItem Caption="Last Edited Date:" >
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHLastEditedDate" runat="server" Width="170px" ColCount="1" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                               </dx:LayoutItem>  
                                  <dx:LayoutItem Caption="Submitted By:" >
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHSubmittedBy" runat="server" Width="170px" ColCount="1" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                               </dx:LayoutItem>
                                          <dx:LayoutItem Caption="Submitted Date:" >
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHSubmittedDate" runat="server" Width="170px" ColCount="1" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                               </dx:LayoutItem> 
                                        </Items>
                                    </dx:LayoutGroup>
                                </Items>
                            </dx:TabbedLayoutGroup>
                            <%-- <!--#endregion --> --%>

                            <%--<!--#region Region Details --> --%>


                            <dx:LayoutGroup Caption="Picklist Detail">
                                <Items>
                                    <dx:LayoutItem Caption="">
                                        <LayoutItemNestedControlCollection>
                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                             <dx:ASPxGridView ID="dgvocn" runat="server" AutoGenerateColumns="False" Width="170px"
                                                    OnCommandButtonInitialize="gv_CommandButtonInitialize" OnCellEditorInitialize="dgvocn_CellEditorInitialize" ClientInstanceName="gvocn"
                                                    OnRowValidating="grid_RowValidating" OnBatchUpdate="gv1_BatchUpdate" KeyFieldName="OCNNumber" OnInit="gv1_Init"   >
                                                    <ClientSideEvents Init="OnInitTrans" />
                                                                  <Columns>
                                                      
                                                        <dx:GridViewCommandColumn ButtonType="Image" ShowDeleteButton="True" ShowInCustomizationForm="True" ShowNewButtonInHeader="True" VisibleIndex="1" Width="30px">
                                                        </dx:GridViewCommandColumn>
                                                      
                                                           <dx:GridViewDataTextColumn FieldName="OCNNumber" VisibleIndex="1" Width="130px" Name="glOCNNumber">
                                                                  <EditItemTemplate>
                                                                <dx:ASPxGridLookup ID="glOCNumber" runat="server" AutoGenerateColumns="False" AutoPostBack="false"
                                                                    KeyFieldName="DocNumber"  ClientInstanceName="glocn" TextFormatString="{0}"  Width="130px" Onload="gvLookupLoad" OnInit="glOCNumber_Init" IncrementalFilteringMode="Contains">
                                                                        <GridViewProperties Settings-ShowFilterRow="true">
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True"
                                                                            AllowSelectSingleRowOnly="True" />
                                                                    </GridViewProperties>

                                                                          


                                                                   <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="DocNumber" ReadOnly="True" VisibleIndex="0"    >
                                                                  <Settings AutoFilterCondition="Contains" />
                                                                              </dx:GridViewDataTextColumn>
                                                                    </Columns>
                                                                    <ClientSideEvents RowClick="gridLookup_CloseUp2" KeyPress="gridLookup_KeyPress2" KeyDown="gridLookup_KeyDown2" DropDown="lookup"  />
                                                                </dx:ASPxGridLookup>
                                                            </EditItemTemplate>
                                                        </dx:GridViewDataTextColumn>

                                                      </Columns>
                                                      <ClientSideEvents CustomButtonClick="OnCustomClick" />
                                                    <SettingsPager PageSize="5"/> 
                                                    <Settings HorizontalScrollBarMode="Visible" VerticalScrollBarMode="Auto" ColumnMinWidth="120" VerticalScrollableHeight="130"  /> 
                                                    <ClientSideEvents  BatchEditConfirmShowing="OnConfirm"
                                                       BatchEditStartEditing="OnStartEditings" BatchEditEndEditing="OnEndEditings" />
                                                            <SettingsEditing Mode="Batch" />
                                                </dx:ASPxGridView>

                                                <dx:ASPxGridView ID="gv1" runat="server" AutoGenerateColumns="False" Width="747px"
                                                    OnCommandButtonInitialize="gv_CommandButtonInitialize" OnCellEditorInitialize="gv1_CellEditorInitialize" ClientInstanceName="gv1"
                                                    OnRowValidating="grid_RowValidating" OnBatchUpdate="gv1_BatchUpdate" KeyFieldName="DocNumber;LineNumber" OnInit="gv1_Init" ClientVisible="false" 
                                                    SettingsBehavior-AllowSort="false">
                                                    <ClientSideEvents Init="OnInitTrans" />
                                                     <Columns>
                                                        <dx:GridViewDataTextColumn FieldName="DocNumber" Visible="False"
                                                            VisibleIndex="0">
                                                        </dx:GridViewDataTextColumn>
                                                            <dx:GridViewDataTextColumn FieldName="LineNumber" VisibleIndex="2" Visible="true" Width="80px" PropertiesTextEdit-ConvertEmptyStringToNull="true" ReadOnly="true">
                                                            <PropertiesTextEdit ConvertEmptyStringToNull="False">
                                                            </PropertiesTextEdit>
                                                        </dx:GridViewDataTextColumn>
                                                   
                                                           <dx:GridViewDataTextColumn FieldName="ItemCode" VisibleIndex="3" Width="150px" Name="glItemCode" >
                                                            <EditItemTemplate>
                                                                <dx:ASPxGridLookup ID="glItemCode" runat="server" AutoGenerateColumns="False" AutoPostBack="false" OnInit="itemcode_Init" 
                                                                    DataSourceID="Masterfileitem" KeyFieldName="ItemCode" ClientInstanceName="gl" TextFormatString="{0}" Width="150px" OnLoad="gvLookupLoad">
                                                                   <GridViewProperties Settings-ShowFilterRow="true" SettingsBehavior-FilterRowMode="Auto" Settings-VerticalScrollableHeight="150" Settings-VerticalScrollBarMode="Visible"> 
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True"
                                                                            AllowSelectSingleRowOnly="True" AllowDragDrop="False" EnableRowHotTrack="True"/>
                                                                    </GridViewProperties>
                                                                    <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="ItemCode" Width="100px" ReadOnly="True" VisibleIndex="0" >
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                         </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn FieldName="FullDesc"  Width="200px" ReadOnly="True" VisibleIndex="1" >
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                         </dx:GridViewDataTextColumn>
                                                                    </Columns>
                                                                    <ClientSideEvents KeyPress="gridLookup_KeyPress" KeyDown="gridLookup_KeyDown"  DropDown="function(s,e){gl.GetGridView().PerformCallback(itemc); e.processOnServer = false;}"
                                                                         ValueChanged="function(s,e){
                                                                        if(itemc != gl.GetValue()){
                                                                        loader.SetText('Loading...');
                                                                        loader.Show();
                                                                        gl2.GetGridView().PerformCallback('ItemCode' + '|' + gl.GetValue() + '|' + 'code' + '|' + bulkqty);
                                                                        e.processOnServer = false;
                                                                        valchange2 = true;}
                                                                  }" />
                                                                </dx:ASPxGridLookup>
                                                            </EditItemTemplate>
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn ReadOnly="true" FieldName="FullDesc" VisibleIndex="4" Width="250px" Caption="Description">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="ColorCode" VisibleIndex="5" Width="0px" UnboundType="String">
                                                            <EditItemTemplate>
                                                                <dx:ASPxGridLookup ID="glColorCode" runat="server" AutoGenerateColumns="False" AutoPostBack="false" 
                                                                    KeyFieldName="ColorCode" ClientInstanceName="gl2" TextFormatString="{0}" Width="80px" OnLoad="gvLookupLoad" OnInit="lookup_Init">
                                                                    <GridViewProperties Settings-ShowFilterRow="true">
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True" />
                                                                    </GridViewProperties>
                                                                    <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="ColorCode" ReadOnly="True" VisibleIndex="0">
                                                                        </dx:GridViewDataTextColumn>
                                                                    </Columns>
                                                                    <ClientSideEvents EndCallback="GridEnd" KeyPress="gridLookup_KeyPress" KeyDown="gridLookup_KeyDown"
                                                                        DropDown="function dropdown(s, e){
                                                                        gl2.GetGridView().PerformCallback('ColorCode' + '|' + itemc + '|' + s.GetInputElement().value);
                                                                        e.processOnServer = false;
                                                                        }" RowClick="gridLookup_CloseUp"/>
                                                                </dx:ASPxGridLookup>
                                                            </EditItemTemplate>
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="ClassCode" VisibleIndex="6" Width="0px" UnboundType="String">
                                                            <EditItemTemplate>
                                                                <dx:ASPxGridLookup ID="glClassCode" runat="server" AutoGenerateColumns="False" AutoPostBack="false" OnInit="lookup_Init"
                                                                KeyFieldName="ClassCode" ClientInstanceName="gl3" TextFormatString="{0}" Width="80px" OnLoad="gvLookupLoad">
                                                                    <GridViewProperties Settings-ShowFilterRow="true">
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True"
                                                                            AllowSelectSingleRowOnly="True" />
                                                                    </GridViewProperties>
                                                                    <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="ClassCode" ReadOnly="True" VisibleIndex="0" />
                                                                    </Columns>
                                                                    <ClientSideEvents  EndCallback="GridEnd" KeyPress="gridLookup_KeyPress" KeyDown="gridLookup_KeyDown" 
                                                                        DropDown="function dropdown(s, e){
                                                                        gl3.GetGridView().PerformCallback('ClassCode' + '|' + itemc + '|' + s.GetInputElement().value);
                                                                        e.processOnServer = false;
                                                                        }" RowClick="gridLookup_CloseUp"/>
                                                                </dx:ASPxGridLookup>
                                                            </EditItemTemplate>
                                                        </dx:GridViewDataTextColumn>
                                                        
                                                        <dx:GridViewDataTextColumn FieldName="SizeCode" VisibleIndex="7" Width="0px" UnboundType="String">
                                                            <EditItemTemplate>
                                                                <dx:ASPxGridLookup ID="glSizeCode" runat="server" AutoGenerateColumns="False" AutoPostBack="false" OnInit="lookup_Init"
                                                                KeyFieldName="SizeCode" ClientInstanceName="gl4" TextFormatString="{0}" Width="80px" OnLoad="gvLookupLoad">
                                                                    <GridViewProperties Settings-ShowFilterRow="true">
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True"
                                                                            AllowSelectSingleRowOnly="True" />
                                                                    </GridViewProperties>
                                                                    <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="SizeCode" ReadOnly="True" VisibleIndex="0" />
                                                                    </Columns>
                                                                    <ClientSideEvents  EndCallback="GridEnd" KeyPress="gridLookup_KeyPress" KeyDown="gridLookup_KeyDown" 
                                                                        DropDown="function dropdown(s, e){
                                                                        gl4.GetGridView().PerformCallback('SizeCode' + '|' + itemc + '|' + s.GetInputElement().value);
                                                                        e.processOnServer = false;
                                                                        }" RowClick="gridLookup_CloseUp"/>
                                                                </dx:ASPxGridLookup>
                                                            </EditItemTemplate>
                                                        </dx:GridViewDataTextColumn>
                                                     <dx:GridViewDataSpinEditColumn FieldName="BulkQty" Caption="Qty" VisibleIndex="8" Width="80px">
                                                            <PropertiesSpinEdit Increment="0" NullDisplayText="0" ConvertEmptyStringToNull="False" NullText="0" DisplayFormatString="{0:N}"
                                                                 SpinButtons-ShowIncrementButtons="false" ClientInstanceName="gBulkQty" Width="80px">
                                                                <SpinButtons ShowIncrementButtons="False"></SpinButtons>
                                                   <ClientSideEvents ValueChanged="function(s,e){
                                                                         loader.SetText('Calculating');
                                                                         loader.Show();
                                                                         gl4.GetGridView().PerformCallback('BulkQty' + '|' + itemc + '|' + gBulkQty.GetValue());
                                                                         e.processOnServer = false;
                                                                         valchange = true;}"
                                                                         />
                                                            </PropertiesSpinEdit>
                                                        </dx:GridViewDataSpinEditColumn>

                                                    <dx:GridViewDataTextColumn Caption="PalletID" Name="PalletID" ShowInCustomizationForm="True" VisibleIndex="12" FieldName="PalletID">
                                                        <EditItemTemplate>
                                                                <dx:ASPxGridLookup ID="glpallet" runat="server" AutoGenerateColumns="False" AutoPostBack="false" DataSourceID="sdsPallet"  OnInit="glpallet_Init"
                                                                KeyFieldName="PalletID" ClientInstanceName="glpallet" TextFormatString="{0}" Width="80px" OnLoad="gvLookupLoad">
                                                                    <GridViewProperties Settings-ShowFilterRow="true">
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True"
                                                                            AllowSelectSingleRowOnly="True" />
                                                                    </GridViewProperties>
                                                                    <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="PalletID" ReadOnly="True" VisibleIndex="0" >
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn FieldName="MfgDate" ReadOnly="True" VisibleIndex="1" >
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn FieldName="ExpirationDate" ReadOnly="True" VisibleIndex="2" >
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn FieldName="BatchNumber" ReadOnly="True" VisibleIndex="3" >
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                    </Columns>
                                                                <ClientSideEvents KeyPress="gridLookup_KeyPress" KeyDown="gridLookup_KeyDown" 
                                                                    DropDown="function (s,e){glpallet.GetGridView().PerformCallback( itemc + '|' + colorc + '|' + classc + '|' + sizec + '|' + 'ItemCodeDropDown'  );
                                                                     e.processOnServer = false;                            }"  
                                                                    CloseUp="gridLookup_CloseUp" ValueChanged="function(s,e){
                                                                                loader.SetText('Calculating');
                                                                         loader.Show();
                                                                         gl4.GetGridView().PerformCallback('PalletID' + '|' + itemc + '|' + glpallet.GetValue());
                                                                         e.processOnServer = false;
                                                                         valchange3 = true;}"
                                                                           />
                                                                </dx:ASPxGridLookup>
                                                            </EditItemTemplate>
                                                        </dx:GridViewDataTextColumn>
                                                         <dx:GridViewDataTextColumn FieldName="Location" Name="glLocation" ShowInCustomizationForm="True" VisibleIndex="13">
                                                          
                                                              </dx:GridViewDataTextColumn>
                                                        <dx:GridViewCommandColumn ButtonType="Image" ShowDeleteButton="True"  ShowNewButtonInHeader="true" ShowInCustomizationForm="True" VisibleIndex="1" Width="95px">
                                                        <CustomButtons>
                                                            <dx:GridViewCommandColumnCustomButton ID="Details">
                                                               <Image IconID="support_info_16x16"></Image>
                                                            </dx:GridViewCommandColumnCustomButton>
                                                              	<dx:GridViewCommandColumnCustomButton ID="CountSheet">
                                                             <Image IconID="arrange_withtextwrapping_topleft_16x16" ToolTip="Countsheet"></Image>
                                                            </dx:GridViewCommandColumnCustomButton>
                                                                   <dx:GridViewCommandColumnCustomButton ID="CopyButton" Text="Copy">
                                                                <Image IconID="edit_copy_16x16" ToolTip="Clone"></Image>
                                                            </dx:GridViewCommandColumnCustomButton>
                                                        </CustomButtons>
                                                        </dx:GridViewCommandColumn>
                                                        <dx:GridViewDataTextColumn Caption="Kilos" Name="Qty" ShowInCustomizationForm="True" VisibleIndex="10" FieldName="Qty">
                                                        </dx:GridViewDataTextColumn>
                                                              <dx:GridViewDataTextColumn FieldName="Unit" Name="Unit" ShowInCustomizationForm="True" VisibleIndex="11" Width="80px">
                                                        <EditItemTemplate>
                                                            <dx:ASPxGridLookup ID="UnitCode" runat="server" AutoGenerateColumns="False" AutoPostBack="false"
                                                                        DataSourceID="Unit" KeyFieldName="UnitCode" ClientInstanceName="glUnit" TextFormatString="{0}" Width="80px" OnLoad="gvLookupLoad"
                                                                        >
                                                                        <GridViewProperties Settings-ShowFilterRow="true">
                                                                            <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True"
                                                                                AllowSelectSingleRowOnly="True" />
                                                                        </GridViewProperties>
                                                                        <Columns>
                                                                            <dx:GridViewDataTextColumn FieldName="UnitCode" ReadOnly="True" VisibleIndex="0" />
                                                                        </Columns>
                                                                        <ClientSideEvents KeyPress="gridLookup_KeyPress" KeyDown="gridLookup_KeyDown" DropDown="lookup" 
                                                                            ValueChanged="function(s,e){
                                                                        if(unitc != glUnit.GetValue()){
                                                                            gv1.batchEditApi.EndEdit();
                                                                            }}" />
                                                                    </dx:ASPxGridLookup>
                                                        </EditItemTemplate>
                                                        </dx:GridViewDataTextColumn>
                                                          <dx:GridViewDataTextColumn FieldName="ToLocation" VisibleIndex="13" Width="80px" Name="ToLocation">
                                                             <EditItemTemplate>
                                                                <dx:ASPxGridLookup ID="ToLocation" runat="server" AutoGenerateColumns="True" AutoPostBack="false"  OnInit="gl6_Init"
                                                                    DataSourceID="Location" KeyFieldName="LocationCode" ClientInstanceName="gl6" TextFormatString="{0}" Width="80px" OnLoad="gvLookupLoad" >
                                                                    <GridViewProperties Settings-ShowFilterRow="true">
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True"
                                                                            AllowSelectSingleRowOnly="True" />
                                                                    </GridViewProperties>
                                                                    <ClientSideEvents KeyPress="gridLookup_KeyPress" KeyDown="gridLookup_KeyDown" ValueChanged="gridLookup_CloseUp"
                                                                              DropDown="function(s,e){
                                                                        gl6.GetGridView().PerformCallback();
                                                                                                  }" RowClick="gridLookup_CloseUp" />
                                                                </dx:ASPxGridLookup>
                                                            </EditItemTemplate>
                                                        </dx:GridViewDataTextColumn>


                                                         <dx:GridViewDataTextColumn FieldName="BaseQty" Caption="BaseQty" Name="BaseQty" ShowInCustomizationForm="True"  Width="0px" VisibleIndex="20" UnboundType="Decimal">
                                                        </dx:GridViewDataTextColumn>
                                                         <dx:GridViewDataTextColumn FieldName="Price" Caption="Price" Name="Price" ShowInCustomizationForm="True" Width="0px" VisibleIndex="21" UnboundType="Decimal">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="StatusCode" ShowInCustomizationForm="True" VisibleIndex="22" Width="0px">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="BarcodeNo" ShowInCustomizationForm="True" VisibleIndex="23" Width="0px" Caption="Barcode Number">
                                                        </dx:GridViewDataTextColumn>

                                                        <dx:GridViewDataTextColumn FieldName="Field1"  Caption="Field1" Name="Field1" ShowInCustomizationForm="True" Width="0px" VisibleIndex="24" UnboundType="Bound">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="Field2" Caption="Field2"  Name="Field2" ShowInCustomizationForm="True" Width="0px" VisibleIndex="25" UnboundType="Bound">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="Field3" Caption="Field3"  Name="Field3" ShowInCustomizationForm="True" Width="0px" VisibleIndex="26" UnboundType="Bound">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="Field4" Caption="Field4"  Name="Field4" ShowInCustomizationForm="True" Width="0px" VisibleIndex="27" UnboundType="Bound">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="Field5" Caption="Field5"  Name="Field5" ShowInCustomizationForm="True" Width="0px" VisibleIndex="28" UnboundType="Bound">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="Field6" Caption="Field6"  Name="Field6" ShowInCustomizationForm="True" Width="0px" VisibleIndex="29" UnboundType="Bound">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="Field7" Caption="Field7"  Name="Field7" ShowInCustomizationForm="True" Width="0px" VisibleIndex="30" UnboundType="Bound">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="Field8"  Caption="Field8" Name="Field8" ShowInCustomizationForm="True" Width="0px" VisibleIndex="31" UnboundType="Bound">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="Field9"  Caption="Field9"  Name="Field9" ShowInCustomizationForm="True" Width="0px" VisibleIndex="32" UnboundType="Bound">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="BulkUnit" VisibleIndex="9" Name="BulkUnit" PropertiesTextEdit-ClientInstanceName="gbulkunit" Width="80px">
                                                    <PropertiesTextEdit ClientInstanceName="gbulkunit"></PropertiesTextEdit>
                                                        <EditItemTemplate>
                                                            <dx:ASPxGridLookup ID="BulkUnit" runat="server" AutoGenerateColumns="False" AutoPostBack="false"
                                                                        DataSourceID="Unit" KeyFieldName="UnitCode" ClientInstanceName="glBulkUnit" TextFormatString="{0}" Width="80px" OnLoad="gvLookupLoad"
                                                                        >
                                                                        <GridViewProperties Settings-ShowFilterRow="true">
                                                                            <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True"
                                                                                AllowSelectSingleRowOnly="True" />
                                                                        </GridViewProperties>
                                                                        <Columns>
                                                                            <dx:GridViewDataTextColumn FieldName="UnitCode" ReadOnly="True" VisibleIndex="0" />
                                                                        </Columns>
                                                                        <ClientSideEvents KeyPress="gridLookup_KeyPress" KeyDown="gridLookup_KeyDown" DropDown="lookup" RowClick="gridLookup_CloseUp" />
                                                                    </dx:ASPxGridLookup>
                                                        </EditItemTemplate>
                                                        </dx:GridViewDataTextColumn>
                                                          <dx:GridViewDataDateColumn Caption="Manufacturing Date" FieldName="Mkfgdate" ShowInCustomizationForm="True" VisibleIndex="14" UnboundType="String" >
                                                        </dx:GridViewDataDateColumn>
                                                        <dx:GridViewDataTextColumn FieldName="BatchNo" Name="BatchNo" ShowInCustomizationForm="True" VisibleIndex="13">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataTextColumn FieldName="LotID" ShowInCustomizationForm="True" VisibleIndex="18">
                                                        </dx:GridViewDataTextColumn>
                                                        <dx:GridViewDataDateColumn Caption="Expiry Date" FieldName="ExpiryDate" ShowInCustomizationForm="True" VisibleIndex="15">
                                                        </dx:GridViewDataDateColumn>
                                                        <dx:GridViewDataDateColumn   Caption="RR Doc Date" FieldName="RRDocdate" ShowInCustomizationForm="True" VisibleIndex="19">
                                                        </dx:GridViewDataDateColumn>
                                                        
                                                   
                                                    </Columns>
                                                               <ClientSideEvents CustomButtonClick="OnCustomClick"/>
                                                    <SettingsCommandButton>
                                                        <NewButton>
                                                        <Image IconID="actions_addfile_16x16"></Image>
                                                        </NewButton>
                                                        <EditButton>
                                                        <Image IconID="actions_addfile_16x16"></Image>
                                                        </EditButton>
                                                        <DeleteButton>
                                                        <Image IconID="actions_cancel_16x16"></Image>
                                                        </DeleteButton>
                                                    </SettingsCommandButton>
                                                    <SettingsPager Mode="ShowAllRecords"/> 
                                                    <SettingsBehavior AllowSort ="false" />
                                                    <Settings HorizontalScrollBarMode="Visible" VerticalScrollBarMode="Auto" ColumnMinWidth="120" VerticalScrollableHeight="530"  /> 
                                                    <ClientSideEvents BatchEditConfirmShowing="OnConfirm" BatchEditRowValidating="Grid_BatchEditRowValidating"
                                                        BatchEditStartEditing="OnStartEditing" BatchEditEndEditing="OnEndEditing" />
                                                            <SettingsEditing Mode="Batch" />
                                                </dx:ASPxGridView>
                                      
                                            </dx:LayoutItemNestedControlContainer>
                                        </LayoutItemNestedControlCollection>
                                    </dx:LayoutItem>
                                </Items>
                            </dx:LayoutGroup>

                            
                            <%-- <!--#endregion --> --%>
                        </Items>
                    </dx:ASPxFormLayout>
                    <dx:ASPxPanel id="BottomPanel" runat="server" fixedposition="WindowBottom" backcolor="#FFFFFF" Height="30px">
                        <PanelCollection>
                            <dx:PanelContent runat="server" SupportsDisabledAttribute="True">
                                <div class="pnl-content">
                                <dx:ASPxCheckBox style="display: inline-block;" ID="glcheck" runat="server" ClientInstanceName="glcheck" TextAlign="Left" Text="Prevent auto-close upon update" Width="200px"></dx:ASPxCheckBox>
                                <dx:ASPxButton ID="updateBtn" runat="server" Text="Update" AutoPostBack="False" CssClass="btn" ClientInstanceName="btn"
                                    UseSubmitBehavior="false" CausesValidation="true">
                                    <ClientSideEvents Click="OnUpdateClick" />
                                </dx:ASPxButton>
                                </div>
                            </dx:PanelContent>
                        </PanelCollection>
                    </dx:ASPxPanel>
                </dx:PanelContent>
            </PanelCollection>
        </dx:ASPxCallbackPanel>
        <dx:ASPxPopupControl ID="DeleteControl" runat="server" Width="250px" Height="100px" HeaderText="Warning!"
        CloseAction="CloseButton" CloseOnEscape="True" Modal="True" ClientInstanceName="DeleteControl"
        PopupHorizontalAlign="WindowCenter" PopupVerticalAlign="WindowCenter">
            <ContentCollection>
                <dx:PopupControlContentControl runat="server">
                    <dx:ASPxLabel ID="ASPxLabel1" runat="server" Text="Are you sure you want to delete this specific document?" />
                    <table>
                        <tr>
                            <td>&nbsp;</td>
                        </tr>
                        <tr>
                           <td><dx:ASPxButton ID="Ok" runat="server" Text="Ok" UseSubmitBehavior="false" AutoPostBack="false" CausesValidation="false">
                             <ClientSideEvents Click="function (s, e){ cp.PerformCallback('ConfDelete');  e.processOnServer = false;}" />
                             </dx:ASPxButton>
                         <td><dx:ASPxButton ID="Cancel" runat="server" Text="Cancel" UseSubmitBehavior="false" AutoPostBack="false" CausesValidation="false">
                             <ClientSideEvents Click="function (s,e){ DeleteControl.Hide(); }" />
                             </dx:ASPxButton> 
                        </tr>
                    </table>
                </dx:PopupControlContentControl>
            </ContentCollection>
        </dx:ASPxPopupControl>
        <dx:ASPxLoadingPanel ID="ASPxLoadingPanel1" runat="server" Text="Cloning..." Modal="true"
            ClientInstanceName="loader" ContainerElementID="gv1">
             <LoadingDivStyle Opacity="0"></LoadingDivStyle>
        </dx:ASPxLoadingPanel>
    </form>

    <!--#region Region Datasource-->
    <%--<!--#region Region Header --> --%>

    <asp:ObjectDataSource ID="odsDetail" runat="server" SelectMethod="getdetail" TypeName="Entity.PICKLIST+PICKLISTDetail" DataObjectTypeName="Entity.PICKLIST+PICKLISTDetail" DeleteMethod="DeletePICKLISTDetail"  UpdateMethod="UpdatePICKLISTDetail" InsertMethod="AddPICKLISTDetail" >
        <SelectParameters>
            <asp:QueryStringParameter Name="DocNumber" QueryStringField="DocNumber" Type="String" />
            <asp:SessionParameter Name="Conn" SessionField="ConnString" Type="String" />
        </SelectParameters>
    </asp:ObjectDataSource>
    <asp:SqlDataSource ID="sdsDetail" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT * FROM  wms.picklistdetail where DocNumber  is null " OnInit="Connection_Init" >
  
    </asp:SqlDataSource>
        <asp:SqlDataSource ID="sdsDetail1" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT * FROM  wms.OCNandPicklistDetail where DocNumber  is null " OnInit="Connection_Init" >
  
    </asp:SqlDataSource>
  
    <asp:SqlDataSource ID="Masterfileitem" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="" OnInit="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="Masterfileitemdetail" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="" OnInit="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="Warehouse" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT WarehouseCode,Description FROM Masterfile.[Warehouse] where isnull(IsInactive,0)=0" OnInit="Connection_Init"></asp:SqlDataSource>

    <asp:SqlDataSource ID="Masterfilebizcustomer" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT BizPartnerCode, Name FROM Masterfile.[BizPartner] where isnull(IsInactive,0)=0 and IsCustomer='1'" OnInit="Connection_Init"></asp:SqlDataSource>
      <asp:SqlDataSource ID="OCN" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT DocNumber,PickType,StorerKey,WarehouseCode,PlantCode FROM WMS.[OCN] where NOT ISNULL(SubmittedBy,'')='' and  NOT ISNULL(SubmittedDate,'')='' and StatusCode='N' " OnInit="Connection_Init" ></asp:SqlDataSource>
    



    <asp:ObjectDataSource ID="OCNInsert" runat="server" SelectMethod="getdetail"  TypeName="Entity.PICKLIST+OCNandPICKLISTDetail" DataObjectTypeName="Entity.PICKLIST+OCNandPICKLISTDetail" UpdateMethod="UpdateOCNandPICKLISTDetail" InsertMethod="AddOCNandPICKLISTDetail" DeleteMethod="DeleteOCNandPICKLISTDetail"  >
          <SelectParameters>
            <asp:QueryStringParameter Name="DocNumber" QueryStringField="DocNumber" Type="String" />
            <asp:SessionParameter Name="Conn" SessionField="ConnString" Type="String" />
        </SelectParameters>
    </asp:ObjectDataSource>
        <asp:SqlDataSource ID="OCNDETAIL" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="" OnInit="Connection_Init"></asp:SqlDataSource>
      <asp:SqlDataSource ID="Location" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="" OnInit="Connection_Init"></asp:SqlDataSource>
          <%--<asp:SqlDataSource ID="Location" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="Select LocationCode,LocationDescription from masterfile.Location  where isnull(IsInactive,0)= 0" OnInit="Connection_Init"></asp:SqlDataSource>--%>
    <asp:SqlDataSource ID="Unit" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT * FROM Masterfile.Unit where ISNULL(IsInactive,0)=0" OnInit ="Connection_Init"></asp:SqlDataSource>
     <asp:SqlDataSource ID="sdsPallet" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="" OnInit="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="StorageSrc" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT * FROM Masterfile.StorageType " OnInit ="Connection_Init"></asp:SqlDataSource>

     <!--#endregion-->
</body>
</html>


