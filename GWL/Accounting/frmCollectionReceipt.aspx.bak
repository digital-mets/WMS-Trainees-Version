<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="frmCollectionReceipt.aspx.cs" Inherits="GWL.frmCollectionReceipt" %>

<%@ Register Assembly="DevExpress.Web.v15.1, Version=15.1.12.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" Namespace="DevExpress.Web" TagPrefix="dx" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script src="../js/PerfSender.js" type="text/javascript"></script>
    <title>Collection Receipt</title>
    <link rel="Stylesheet" type="text/css" href="~/css/styles.css" /><%--Link to global stylesheet--%>
    <script src="../js/jquery-1.6.1.min.js" type="text/javascript"></script>
    <script src="../js/jquery-ui.min.js" type="text/javascript"></script>
    <!--#region Region CSS-->
    <style type="text/css">
        /*Stylesheet for separate forms (All those which has comments are the ones that can only be changed)*/
        #form1 {
        height: 710px; /*Change this whenever needed*/
        }

        .Entry {
        padding: 20px;
        margin: 10px auto;
        background: #FFF;
        }

        /*.dxeButtonEditSys input,
        .dxeTextBoxSys input{
            text-transform:uppercase;
        }*/

         .pnl-content
        {
            text-align: right;
        }


    </style>
    <!--#endregion-->
    
    <!--#region Region Javascript-->
    <script>
        var isValid = true;
        var counterror = 0;
        var clicked;

               function getParameterByName(name) {
           name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
           var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
               results = regex.exec(location.search);
           return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
       }

        var module = getParameterByName("transtype");
        var id = getParameterByName("docnumber");
        var entry = getParameterByName("entry");

        $(document).ready(function () {
            PerfStart(module, entry, id);
        });

        function OnValidation(s, e) { //Validation function for header controls (Set this for each header controls)
            if (s.GetText() == "" || e.value == "" || e.value == null) {
                counterror++;
                isValid = false
            }
            else {
                isValid = true;
            }
        }

        function OnInitTrans(s, e) {

            var BizPartnerCode = gvSup.GetText();

            factbox.SetContentUrl('../FactBox/fbBizPartner.aspx?BizPartnerCode=' + BizPartnerCode);
            AdjustSize();
        }

        function OnControlsInitialized(s, e) {
            ASPxClientUtils.AttachEventToElement(window, "resize", function (evt) {
                AdjustSize();
            });
        }

        function AdjustSize() {
            var width = Math.max(0, document.documentElement.clientWidth);
            gvCredit.SetWidth(width - 120);
            gvChecks.SetWidth(width - 120);
            gvARChecks.SetWidth(width - 120);
        }

        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }


        function OnUpdateClick(s, e) { //Add/Edit/Close button function
            gvARChecks.batchEditApi.EndEdit();
            gvChecks.batchEditApi.EndEdit();
            gvCredit.batchEditApi.EndEdit();

            autocalculate();
            setTimeout(function () {

                var btnmode = btn.GetText(); //gets text of button
                if (btnmode == "Delete") {
                    cp.PerformCallback("Delete");
                }
                // console.log(isValid + ' ' + counterror);

                var indicies = gvARChecks.batchEditHelper.GetDataItemVisibleIndices();
                var cntdetails = indicies.length;

                if (isValid && counterror < 1 || btnmode == "Close") { //check if there's no error then proceed to callback
                    //Sends request to server side
                    if (btnmode == "Add") {
                        autocalculate();
                        cp.PerformCallback("Add");
                    }
                    else if (btnmode == "Update") {
                        autocalculate();
                        cp.PerformCallback("Update");
                    }
                    else if (btnmode == "Close") {
                        cp.PerformCallback("Close");
                    }
                }
                else {
                    counterror = 0;
                    alert('Please check all the fields!');
                    // console.log(counterror);
                }


            }, 500)
        }

        //function OnUpdateClick(s, e) { //Add/Edit/Close button function
        //    var btnmode = btn.GetText(); //gets text of button
        //    if (btnmode == "Delete") {
        //        cp.PerformCallback("Delete");
        //    }
        //    // console.log(isValid + ' ' + counterror);

        //    var indicies = gvARChecks.batchEditHelper.GetDataItemVisibleIndices();
        //    var cntdetails = indicies.length;

        //    if (isValid && counterror < 1 || btnmode == "Close") { //check if there's no error then proceed to callback
        //        //Sends request to server side
        //        if (btnmode == "Add") {
        //            autocalculate();
        //            cp.PerformCallback("Add");
        //        }
        //        else if (btnmode == "Update") {
        //            autocalculate();
        //            cp.PerformCallback("Update");
        //        }
        //        else if (btnmode == "Close") {
        //            cp.PerformCallback("Close");
        //        }
        //    }
        //    else {
        //        counterror = 0;
        //        alert('Please check all the fields!');
        //        // console.log(counterror);
        //    }


        //}

        function OnConfirm(s, e) {//function upon saving entry
            if (e.requestTriggerID === "cp")//disables confirmation message upon saving.
                e.cancel = true;
        }

        var vatrate = 0;
        var vatdetail1 = 0;

        function gridView_EndCallback(s, e) {//End callback function if (s.cp_success) {
            var iARChecks = gvARChecks.batchEditHelper.GetDataItemVisibleIndices();
            //console.log(iARChecks.length);
            if (s.cp_success) {
                alert(s.cp_message);
                delete (s.cp_success);//deletes cache variables' data
                delete (s.cp_message);
                if (s.cp_forceclose) {
                    delete (s.cp_forceclose);
                    window.close();
                }

            }

            if (s.cp_close) {
                gvARChecks.CancelEdit();
                if (s.cp_message != null) {
                    alert(s.cp_message);
                    delete (s.cp_message);
                }
                if (s.cp_valmsg != null) {
                    alert(s.cp_valmsg);
                    delete (s.cp_valmsg);
                }
                if (glcheck.GetChecked()) {
                    delete (cp_close);
                    window.location.reload();
                }
                else {
                    delete (cp_close);
                    window.close();//close window if callback successful
                }
            }

            if (s.cp_delete) {
                delete (s.cp_delete);
                DeleteControl.Show();
            }

            if (s.cp_cleargrid) {
                gvChecks.CancelEdit();
                gvCredit.CancelEdit();
                delete (s.cp_cleargrid);
            }

            if (s.cp_generated) {
                delete (s.cp_generated);
                autocalculate();
            }
        }

        var index;
        var closing;
        var account; //variable required for lookup
        var valchange = false;
        var currentColumn = null;
        var isSetTextRequired = false;
        var linecount = 1;

        function OnStartEditing(s, e) {//On start edit grid function     
            currentColumn = e.focusedColumn;
            var cellInfo = e.rowValues[e.focusedColumn.index];
            account = s.batchEditApi.GetCellValue(e.visibleIndex, "AccountCode");

            var entry = getParameterByName('entry');
            if (entry == "V" || entry == "D") {
                e.cancel = true; //this will made the gridview readonly
            }
            else if (s == gvARChecks) {
                e.cancel = true;
            }
            else
            {
                if (e.focusedColumn.fieldName === "DiscountType") { //Check the column name
                    DiscountType.GetInputElement().value = cellInfo.value; //Gets the column value
                    isSetTextRequired = true;
                    index = e.visibleIndex;
                    closing = true;
                }

                if (e.focusedColumn.fieldName === "DiscountType") {
                    DiscountType.GetInputElement().value = cellInfo.value;
                }
            }
        }

        function OnStartEditing_gvReceipts(s, e) {//On start edit grid function     
            currentColumn = e.focusedColumn;
            var cellInfo = e.rowValues[e.focusedColumn.index];
            account = s.batchEditApi.GetCellValue(e.visibleIndex, "AccountCode");
            index = e.visibleIndex;

            var entry = getParameterByName('entry');
            if (entry == "V" || entry == "D") {
                e.cancel = true; //this will made the gridview readonly
            }
            else if (e.focusedColumn.fieldName == "Bank") {
                colBank.GetInputElement().value = cellInfo.value;
                isSetTextRequired = true;
            }
        }

        function OnEndEditing(s, e) {//end edit grid function, sets text after select/leaving the current lookup
            var cellInfo = e.rowValues[currentColumn.index];

            var entry = getParameterByName('entry');

            //if (currentColumn.fieldName === "Bank") {
            //    cellInfo.value = colBank.GetValue();
            //    cellInfo.text = colBank.GetText();
            //    // 2017-02-27   TL  Move outside setTimeout function
            //    var g = colBank.GetGridView();
            //    var index = g.GetFocusedRowIndex();
            //    // 2017-02-27   TL  (End)
            //    setTimeout(function () {
            //        // 2017-02-27   TL  Move outside setTimeout function
            //        //var g = colBank.GetGridView();
            //        //g.GetRowValues(g.GetFocusedRowIndex(), 'Bank;Branch', OnGetRowValues);
            //        g.GetRowValues(index, 'Bank;Branch', OnGetRowValues);
            //        // 2017-02-17   TL  (End)
            //        loader.Hide();
            //    }, 1000)
            //}
            //if (currentColumn.fieldName === "Branch") {
            //    cellInfo.value = colBranch.GetValue();
            //    cellInfo.text = colBranch.GetText();
            //}
            if (currentColumn.fieldName === "ProfitCenter") {
                cellInfo.value = colProfitCenter.GetValue();
                cellInfo.text = colProfitCenter.GetText();
            }
            if (currentColumn.fieldName === "AccountCode") {
                cellInfo.value = colAccountCode.GetValue();
                cellInfo.text = colAccountCode.GetText();
            }
            if (currentColumn.fieldName === "BizPartnerCode") {
                cellInfo.value = colBizPartner.GetValue();
                cellInfo.text = colBizPartner.GetText();
            }
            if (currentColumn.fieldName === "CostCenter") {
                cellInfo.value = colCostCenter.GetValue();
                cellInfo.text = colCostCenter.GetText();
            }
            if (currentColumn.fieldName === "BankAccountCode") {
                cellInfo.value = colBankAccount.GetValue();
                cellInfo.text = colBankAccount.GetText();
            }
            if (currentColumn.fieldName === "SubsidiaryCode") {
                cellInfo.value = colSubsiCode.GetValue();
                cellInfo.text = colSubsiCode.GetText();
            }


            if (valchange) {

                valchange = false;
                closing = false;
                for (var i = 0; i < s.GetColumnsCount() ; i++) {
                    var column = s.GetColumn(i);
                    if (column.visible == false || column.fieldName == undefined)
                        continue;
                    ProcessCells(0, e, column, s);
                }
            }
        }

        var val;
        var temp;
        var check_rate = false;

        function ProcessCells(selectedIndex, e, column, s) {
            if (val == null) {
                val = ";;;;";
                temp = val.split(';');
            }
            if (temp[0] == null) {
                temp[0] = "";
            }
            if (temp[1] == null) {
                temp[1] = "";
            }
            if (temp[2] == null) {
                temp[2] = "";
            }
            if (temp[3] == null) {
                temp[3] = "";
            }
            if (temp[4] == null) {
                temp[4] = "";
            }
            if (temp[5] == null) {
                temp[5] = "";
            }
            if (temp[6] == null) {
                temp[6] = "";
            }
            if (temp[7] == null) {
                temp[7] = "";
            }
            if (temp[8] == null) {
                temp[8] = "";
            }
            if (temp[9] == null) {
                temp[9] = "";
            }

            if (selectedIndex == 0) {
            }
        }


        function lookup(s, e) {
            if (isSetTextRequired) {//Sets the text during lookup for item code
                s.SetText(s.GetInputElement().value);
                isSetTextRequired = false;
            }
        }

        //var preventEndEditOnLostFocus = false;
        function gridLookup_KeyDown(s, e) { //Allows tabbing between gridlookup on details
            isSetTextRequired = false;
            var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
            if (keyCode !== ASPxKey.Tab) return;
            var moveActionName = e.htmlEvent.shiftKey ? "MoveFocusBackward" : "MoveFocusForward";
            if (gvCredit.batchEditApi[moveActionName]()) {
                ASPxClientUtils.PreventEventAndBubble(e.htmlEvent);
            }
            if (gvChecks.batchEditApi[moveActionName]()) {
                ASPxClientUtils.PreventEventAndBubble(e.htmlEvent);
            }
            if (gvARChecks.batchEditApi[moveActionName]()) {
                ASPxClientUtils.PreventEventAndBubble(e.htmlEvent);
            }
        }

        function gvARChecks_KeyDown(s, e) { //Allows tabbing between gridlookup on details
            isSetTextRequired = false;
            var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
            if (keyCode !== ASPxKey.Tab) return;
            var moveActionName = e.htmlEvent.shiftKey ? "MoveFocusBackward" : "MoveFocusForward";
            if (gvARChecks.batchEditApi[moveActionName]()) {
                ASPxClientUtils.PreventEventAndBubble(e.htmlEvent);
            }

        }

        function gvCredit_KeyDown(s, e) { //Allows tabbing between gridlookup on details
            isSetTextRequired = false;
            var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
            if (keyCode !== ASPxKey.Tab) return;
            var moveActionName = e.htmlEvent.shiftKey ? "MoveFocusBackward" : "MoveFocusForward";
            if (gvCredit.batchEditApi[moveActionName]()) {
                ASPxClientUtils.PreventEventAndBubble(e.htmlEvent);
            }

        }

        function gvChecks_KeyDown(s, e) { //Allows tabbing between gridlookup on details
            isSetTextRequired = false;
            var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
            if (keyCode !== ASPxKey.Tab) return;
            var moveActionName = e.htmlEvent.shiftKey ? "MoveFocusBackward" : "MoveFocusForward";
            if (gvChecks.batchEditApi[moveActionName]()) {
                ASPxClientUtils.PreventEventAndBubble(e.htmlEvent);
            }
        }

        function gvARChecks_KeyPress(s, e) { //Prevents grid refresh when a user press enter key for every column
            var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
            if (keyCode == ASPxKey.Enter) {
                gvARChecks.batchEditApi.EndEdit();
            }
        }

        function gvChecks_KeyPress(s, e) { //Prevents grid refresh when a user press enter key for every column
            var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
            if (keyCode == ASPxKey.Enter) {
                gvChecks.batchEditApi.EndEdit();
            }
        }

        function gvCredit_KeyPress(s, e) { //Prevents grid refresh when a user press enter key for every column
            var keyCode = ASPxClientUtils.GetKeyCode(e.htmlEvent);
            if (keyCode == ASPxKey.Enter) {
                gvCredit.batchEditApi.EndEdit();
            }
        }


        function gvARChecks_CloseUp(s, e) {
            gvARChecks.batchEditApi.EndEdit();
        }

        function gvChecks_CloseUp(s, e) {
            gvChecks.batchEditApi.EndEdit();
        }

        function gvCredit_CloseUp(s, e) {
            gvCredit.batchEditApi.EndEdit();
        }

        function OnCustomClick(s, e) {
            if (e.buttonID == "ARChecksDelete") {
                gvARChecks.DeleteRow(e.visibleIndex);
                autocalculate();
            }

            if (e.buttonID == "ChecksDelete") {
                gvChecks.DeleteRow(e.visibleIndex);
                autocalculate();
            }

            if (e.buttonID == "CreditDelete") {
                gvCredit.DeleteRow(e.visibleIndex);
                autocalculate();
            }
        }


        function endcp(s, e) {
            var endg = s.GetGridView().cp_endgl1;
            if (endg == true) {
                //console.log(endg);
                sup_cp_Callback.PerformCallback(aglCustomerCode.GetValue().toString());
                e.processOnServer = false;
                endg = null;
            }
        }

        function OnGetRowValues(values) {
            gvChecks.batchEditApi.SetCellValue(index, 'Bank', values[0]);
            gvChecks.batchEditApi.SetCellValue(index, 'Branch', values[1]);
        }

        Number.prototype.format = function (d, w, s, c) {
            var re = '\\d(?=(\\d{' + (w || 3) + '})+' + (d > 0 ? '\\b' : '$') + ')',
                num = this.toFixed(Math.max(0, ~~d));

            return (c ? num.replace(',', c) : num).replace(new RegExp(re, 'g'), '$&' + (s || '.'));
        };

        function autocalculate(s, e) {

            OnInitTrans();

            //genrev

            //for header
            var HCash = 0.00;
            var HCredit = 0.00;
            var HCheck = 0.00;

            //for detail
            var DCash = 0.00;
            var DCredit = 0.00;
            var DCheck = 0.00;

            var arrTrans = [];
            var cntr = 0;
            var holder = 0;
            var txt = "";

            setTimeout(function () {

                var iCredit = gvCredit.batchEditHelper.GetDataItemVisibleIndices();
                var iChecks = gvChecks.batchEditHelper.GetDataItemVisibleIndices();
                var iARChecks = gvARChecks.batchEditHelper.GetDataItemVisibleIndices();

                //FOR AR Checks
                for (var x = 0; x <= iARChecks.length; x++) {
                    DCheck = gvARChecks.batchEditApi.GetCellValue(iARChecks[x], "CheckAmount");

                    if (gvARChecks.batchEditHelper.IsNewItem(iARChecks[x])) {
                        for (var y = 0; y <= iARChecks.length; y++) {
                            if (gvARChecks.batchEditApi.GetCellValue(iGrid[x], "RecordID") == arrTrans[y]) {
                                cntr++;
                            }
                        }
                        if (cntr == 0) {
                            holder++;
                            arrTrans[holder] = gvARChecks.batchEditApi.GetCellValue(iARChecks[x], "RecordID");
                        }
                        else cntr = 0;
                        HCheck += DCheck;
                    }
                    else {
                        var key = gvARChecks.GetRowKey(iARChecks[x]);
                        if (gvARChecks.batchEditHelper.IsDeletedItem(key))
                            console.log("deleted row " + iARChecks[x]);
                        else {
                            for (var y = 0; y <= iARChecks.length; y++) {
                                if (gvARChecks.batchEditApi.GetCellValue(iARChecks[x], "RecordID") == arrTrans[y]) {
                                    cntr++;
                                }
                            }
                            if (cntr == 0) {
                                holder++;
                                if (gvARChecks.batchEditApi.GetCellValue(iARChecks[x], "RecordID") != null) {
                                    arrTrans[holder] = gvARChecks.batchEditApi.GetCellValue(iARChecks[x], "RecordID");
                                }
                            }
                            else cntr = 0;
                            HCheck += DCheck;
                        }
                    }
                }

                for (var z = 0; z <= holder; z++) {
                    if (z == 0 && z == null && z == "undefined")
                        console.log('skip');
                    else {
                        if (arrTrans[z] != 0 && arrTrans[z] != null && z != "undefined")
                        { txt += arrTrans[z] + ";"; }
                    }
                }

                var str = txt;
                str = str.slice(0, -1);
                //END RefTrans

                //Credit
                for (var i = 0; i < iCredit.length; i++) {
                    if (gvCredit.batchEditHelper.IsNewItem(iCredit[i])) {

                        DCredit = gvCredit.batchEditApi.GetCellValue(iCredit[i], "AmountDeposited");

                        HCredit += DCredit;
                    }
                    else {
                        var key = gvCredit.GetRowKey(iCredit[i]);
                        if (gvCredit.batchEditHelper.IsDeletedItem(key)) {
                            console.log("deleted row " + iCredit[i]);
                        }
                        else {
                            DCredit = gvCredit.batchEditApi.GetCellValue(iCredit[i], "AmountDeposited");

                            HCredit += DCredit;
                        }
                    }
                }
                //end

                //Checks
                for (var i = 0; i < iChecks.length; i++) {
                    if (gvChecks.batchEditHelper.IsNewItem(iChecks[i])) {

                        DCheck = gvChecks.batchEditApi.GetCellValue(iChecks[i], "CheckAmount");

                        HCheck += DCheck;
                    }
                    else {
                        var key = gvChecks.GetRowKey(iChecks[i]);
                        if (gvChecks.batchEditHelper.IsDeletedItem(key)) {
                            console.log("deleted row " + iChecks[i]);
                        }
                        else {
                            DCheck = gvChecks.batchEditApi.GetCellValue(iChecks[i], "CheckAmount");

                            HCheck += DCheck;
                        }
                    }
                }
                //end
                //console.log(str);
                aglARChecks.SetText(str);
                txtHCash.SetText(CashAmount.GetText());
                txtHCheck.SetText(HCheck.format(2, 3, ',', '.'));
                txtHCredit.SetText(HCredit.format(2, 3, ',', '.'));

            }, 100);
        }

    </script>
    <!--#endregion-->
</head>
<body style="height: 910px;">
    <dx:ASPxGlobalEvents ID="ge" runat="server">
        <ClientSideEvents ControlsInitialized="OnControlsInitialized" />
    </dx:ASPxGlobalEvents>
<form id="form1" runat="server" class="Entry">
    <dx:ASPxPanel id="toppanel" runat="server" FixedPositionOverlap="true" fixedposition="WindowTop" backcolor="#2A88AD" Height="30px">
        <PanelCollection>
            <dx:PanelContent runat="server" SupportsDisabledAttribute="True">
                <dx:ASPxLabel ID="FormTitle" runat="server" Text="Collection Receipt" Font-Bold="true" ForeColor="White"  Font-Size="X-Large"></dx:ASPxLabel>
            </dx:PanelContent>
        </PanelCollection>
    </dx:ASPxPanel>
    <dx:ASPxPopupControl ID="popup" runat="server" AllowDragging="True" AllowResize="True" ClientInstanceName="factbox" CloseAction="None" 
        EnableViewState="False" HeaderText="BizPartner info" Height="207px" Width="245px" PopupHorizontalOffset="1085" PopupVerticalOffset="50"
         ShowCloseButton="False" ShowCollapseButton="True" ShowOnPageLoad="True" ShowPinButton="True" ShowShadow="True" Collapsed="true" >
        <ContentCollection>
            <dx:PopupControlContentControl runat="server">
            </dx:PopupControlContentControl>
        </ContentCollection>
    </dx:ASPxPopupControl>

    <dx:ASPxPopupControl ID="CSheet" Theme="Aqua" runat="server" AllowDragging="True" ClientInstanceName="CSheet" CloseAction="CloseButton" CloseOnEscape="true"
        EnableViewState="False" HeaderImage-Height="10px" HeaderText="" Height="600px" ShowHeader="true" Width="950px" PopupHorizontalAlign="WindowCenter" PopupVerticalAlign="WindowCenter" 
         ShowCloseButton="true" ShowOnPageLoad="false" ShowShadow="True" Modal="true" ContentStyle-HorizontalAlign="Center">
        <ContentCollection>
            <dx:PopupControlContentControl runat="server">
            </dx:PopupControlContentControl>
        </ContentCollection>
        <ClientSideEvents CloseUp="function (s, e) { window.location.reload(); }" />
    </dx:ASPxPopupControl>
        <dx:ASPxCallbackPanel ID="cp" runat="server" Width="820px" Height="641px" ClientInstanceName="cp" OnCallback="cp_Callback">
            <ClientSideEvents EndCallback="gridView_EndCallback"></ClientSideEvents>
            <PanelCollection>
                <dx:PanelContent runat="server" SupportsDisabledAttribute="True">
                    <dx:ASPxFormLayout ID="frmlayout1" runat="server" Height="565px" Width="850px" style="margin-left: -20px">
                        <SettingsAdaptivity AdaptivityMode="SingleColumnWindowLimit" SwitchToSingleColumnAtWindowInnerWidth="600" />
                        <Items>
                            <dx:TabbedLayoutGroup>
                                <Items>
                                    <dx:LayoutGroup Caption="General">
                                        <Items>
                                            <dx:LayoutGroup Caption="Information" ColCount="2">
                                                <Items>
                                                    <dx:LayoutItem Caption="Document Number">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxTextBox ID="txtDocNumber" runat="server" OnLoad="TextboxLoad" Width="170px" AutoCompleteType="Disabled" Enabled="False">
                                                                </dx:ASPxTextBox>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="Document Date">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxDateEdit ID="dtpDocDate" runat="server" OnInit="dtpDocDate_Init" OnLoad="Date_Load" Width="170px">
                                                                    <ClientSideEvents Validation="OnValidation" />
                                                                    <ValidationSettings Display="None" ErrorDisplayMode="ImageWithTooltip">
                                                                        <RequiredField IsRequired="True" />
                                                                    </ValidationSettings>
                                                                    <InvalidStyle BackColor="Pink">
                                                                    </InvalidStyle>
                                                                    <ClientSideEvents ValueChanged="function(s,e){cp.PerformCallback('DocDateChanged');}"/>
                                                                </dx:ASPxDateEdit>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="Receipt Type">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxComboBox ID="cbxReceiptType" runat="server" Width="170px" ClientInstanceName="glTrans" OnLoad="ComboBox_Load">
                                                                    <ClientSideEvents Validation="OnValidation" 
                                                                        ValueChanged="function() { cp.PerformCallback('RcptTypeChanged'); }"/>
                                                                    <ValidationSettings Display="None" ErrorDisplayMode="ImageWithTooltip">
                                                                        <RequiredField IsRequired="True" />
                                                                    </ValidationSettings>
                                                                    <InvalidStyle BackColor="Pink">
                                                                    </InvalidStyle>
                                                                    <Items>
                                                                        <dx:ListEditItem Text="Collection Receipt" Value="C" />
                                                                        <dx:ListEditItem Text="Collection Receipt (Due)" Value="M" />
                                                                    </Items>
                                                                </dx:ASPxComboBox>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="Collection Type">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxComboBox ID="cbxCollType" runat="server" Width="170px" ClientInstanceName="glTrans" OnLoad="ComboBox_Load">
                                                                    <ClientSideEvents Validation="OnValidation" 
                                                                        ValueChanged="function() { cp.PerformCallback('CollTypeChanged'); }"/>
                                                                    <ValidationSettings Display="None" ErrorDisplayMode="ImageWithTooltip">
                                                                        <RequiredField IsRequired="True" ErrorText="Please select a collection type" />
                                                                    </ValidationSettings>
                                                                    <InvalidStyle BackColor="Pink">
                                                                    </InvalidStyle>
                                                                    <Items>
                                                                        <dx:ListEditItem Text="Trade Payment" Value="T" />
                                                                        <dx:ListEditItem Text="Non-Trade Payment" Value="N" />
                                                                        <dx:ListEditItem Text="Loan Payment" Value="L" />
                                                                    </Items>
                                                                </dx:ASPxComboBox>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="Customer Code">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxGridLookup ID="aglCustomerCode" runat="server" Width="170px" ClientInstanceName="gvSup" DataSourceID="sdsBizPartnerCus" 
                                                                    KeyFieldName="BizPartnerCode" OnLoad="LookupLoad" TextFormatString="{0}" AutoGenerateColumns="false">
                                                                    <GridViewProperties>
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectSingleRowOnly="True" AllowSort="false"/>
                                                                        <Settings ShowFilterRow="True" />
                                                                    </GridViewProperties>
                                                                    <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="BizPartnerCode" ReadOnly="true">
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn FieldName="Name" ReadOnly="true">
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                    </Columns> 
                                                                    <ClientSideEvents ValueChanged="function(s,e){cp.PerformCallback('CustomerChanged');}"/>
                                                                </dx:ASPxGridLookup>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="Business Account">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxGridLookup ID="aglBizAccount" runat="server" Width="170px" DataSourceID="sdsBizAccount" KeyFieldName="BizAccount" 
                                                                    OnLoad="LookupLoad" TextFormatString="{0}" AutoGenerateColumns="false">
                                                                    <GridViewProperties>
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectSingleRowOnly="True" AllowSort="false"/>
                                                                        <Settings ShowFilterRow="True" />
                                                                    </GridViewProperties>
                                                                    <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="BizAccount" ReadOnly="true">
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn FieldName="Name" ReadOnly="true">
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                    </Columns> 
                                                                    <ClientSideEvents ValueChanged="function(s,e){cp.PerformCallback('BizAcctChanged');}"/>
                                                                </dx:ASPxGridLookup>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="Name">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxTextBox ID="txtName" runat="server" Width="170px" ReadOnly="true">
                                                                </dx:ASPxTextBox>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <%--<dx:LayoutItem Caption="Collector">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxTextBox ID="txtCollector" runat="server" Width="170px" OnLoad="TextboxLoad">
                                                                </dx:ASPxTextBox>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>--%>
                                                    <dx:LayoutItem Caption="Collector">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxGridLookup ID="aglCollector" runat="server" DataSourceID="sdsCollector" Width="170px" KeyFieldName="Collector" 
                                                                    OnLoad="LookupLoad" TextFormatString="{0}" AutoGenerateColumns="false">
                                                                    <GridViewProperties>
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectSingleRowOnly="True" AllowSort="false"/>
                                                                        <Settings ShowFilterRow="True" />
                                                                    </GridViewProperties>
                                                                    <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="Collector" ReadOnly="true">
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn FieldName="Name" ReadOnly="true">
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                    </Columns> 
                                                                </dx:ASPxGridLookup>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="Currency" RequiredMarkDisplayMode="Required">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxGridLookup ID="aglCurrency" runat="server" DataSourceID="sdsCurrency" Width="170px" KeyFieldName="Currency" 
                                                                    OnLoad="LookupLoad" TextFormatString="{0}" AutoGenerateColumns="false">
                                                                    <GridViewProperties>
                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectSingleRowOnly="True" AllowSort="false"/>
                                                                        <Settings ShowFilterRow="True" />
                                                                    </GridViewProperties>
                                                                    <Columns>
                                                                        <dx:GridViewDataTextColumn FieldName="Currency" ReadOnly="true">
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn FieldName="CurrencyName" ReadOnly="true">
                                                                            <Settings AutoFilterCondition="Contains" />
                                                                        </dx:GridViewDataTextColumn>
                                                                    </Columns> 
                                                                    <ClientSideEvents Validation="OnValidation" />
                                                                    <ValidationSettings Display="None" ErrorDisplayMode="ImageWithTooltip">
                                                                        <RequiredField IsRequired="True" />
                                                                    </ValidationSettings>
                                                                    <InvalidStyle BackColor="Pink">
                                                                    </InvalidStyle>
                                                                </dx:ASPxGridLookup>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="Remarks">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxTextBox ID="txtRemarks" runat="server" Width="170px" OnLoad="TextboxLoad">
                                                                </dx:ASPxTextBox>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                </Items>
                                            </dx:LayoutGroup>
                                            <dx:LayoutGroup Caption="Amount" ColCount="2">
                                                <Items>
                                                    <dx:LayoutItem Caption="Total Cash Amount">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxTextBox ID="txtHCash" runat="server" Width="170px" NullDisplayText="0.00" 
                                                                    ConvertEmptyStringToNull="False" NullText="0.00" ReadOnly="true" ClientInstanceName ="txtHCash" 
                                                                    DisplayFormatString ="{0:N}" HorizontalAlign="Right">
                                                                </dx:ASPxTextBox>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="Total Bank Credit Amount">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxTextBox ID="txtHCredit" runat="server" Width="170px" NullDisplayText="0.00" 
                                                                    ConvertEmptyStringToNull="False" NullText="0.00" ReadOnly="true" ClientInstanceName ="txtHCredit" 
                                                                    DisplayFormatString ="{0:N}" HorizontalAlign="Right">
                                                                </dx:ASPxTextBox>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="Total Check Amount">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxTextBox ID="txtHCheck" runat="server" Width="170px" NullDisplayText="0.00" 
                                                                    ConvertEmptyStringToNull="False" NullText="0.00" ReadOnly="true" ClientInstanceName ="txtHCheck" 
                                                                    DisplayFormatString ="{0:N}" HorizontalAlign="Right">
                                                                </dx:ASPxTextBox>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                </Items>
                                            </dx:LayoutGroup>
                                        </Items>
                                    </dx:LayoutGroup>
                                    <dx:LayoutGroup Caption="Collection Received">
                                        <Items>
                                            <dx:LayoutGroup Caption="Cash" ColCount="2" Name="Cash">
                                                <Items>
                                                    <dx:LayoutItem Caption="Cash Amount">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxSpinEdit ID="txtDCash" runat="server" Width="170px" Number="0.00" NullDisplayText="0.00" ConvertEmptyStringToNull="False" NullText="0.00"  
                                                                             DisplayFormatString="{0:N}" SpinButtons-ShowIncrementButtons="false" ClientInstanceName ="CashAmount" AllowMouseWheel="False"
                                                                             MaxValue="9999999999" MinValue ="0" OnLoad ="SpinEdit_Load" HorizontalAlign="Right">
                                                                    <SpinButtons ShowIncrementButtons="False"></SpinButtons>
                                                                    <ClientSideEvents KeyUp="autocalculate" Validation="function(){isValid = true;}"/> 
                                                                </dx:ASPxSpinEdit>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                </Items>
                                            </dx:LayoutGroup>
                                            <dx:LayoutGroup Caption="Bank Direct Credit" Name="DirectCredit">
                                                <Items>
                                                    <dx:LayoutItem Caption="">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxGridView ID="gvCredit" runat="server" AutoGenerateColumns="False" Width="770px" ClientInstanceName="gvCredit" OnBatchUpdate="gvCredit_BatchUpdate" 
                                                                    OnCellEditorInitialize="gv1_CellEditorInitialize" OnCommandButtonInitialize="gvReceipts_CommandButtonInitialize" OnCustomButtonInitialize="gvReceipts_CustomButtonInitialize"
                                                                    OnRowValidating="grid_RowValidating" KeyFieldName ="LineNumber">
                                                                    <ClientSideEvents Init="OnInitTrans" BatchEditConfirmShowing="OnConfirm" BatchEditEndEditing="OnEndEditing" BatchEditStartEditing="OnStartEditing_gvReceipts" CustomButtonClick="OnCustomClick" />
                                                                    <SettingsPager Mode="ShowAllRecords">
                                                                    </SettingsPager>
                                                                    <SettingsEditing Mode="Batch">
                                                                    </SettingsEditing>
                                                                    <Settings ColumnMinWidth="120" HorizontalScrollBarMode="Visible" VerticalScrollableHeight="130" VerticalScrollBarMode="Auto" />
                                                                    <SettingsBehavior AllowSort="False" />
                                                                    <Columns>
                                                                        <dx:GridViewCommandColumn ButtonType="Image" ShowInCustomizationForm="True" VisibleIndex="0" Width="30px" ShowNewButtonInHeader="True">
                                                                            <CustomButtons>
                                                                                <dx:GridViewCommandColumnCustomButton ID="CreditDelete">
                                                                                <Image IconID="actions_cancel_16x16"> </Image>
                                                                                </dx:GridViewCommandColumnCustomButton>
                                                                            </CustomButtons>
                                                                        </dx:GridViewCommandColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Line Number" FieldName="LineNumber" Name="cLineNumber" ReadOnly="True" ShowInCustomizationForm="True" VisibleIndex="1">
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Reference No" FieldName="ReferenceNo" Name="cReferenceNo" ShowInCustomizationForm="True" VisibleIndex="2" Width="150px">
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Bank Account Code" FieldName="BankAccountCode" Name="cBankAccountCode" ShowInCustomizationForm="True" VisibleIndex="3" Width="115px">
                                                                            <EditItemTemplate>
                                                                                <dx:ASPxGridLookup ID="glBankAccount" runat="server" AutoGenerateColumns="False" AutoPostBack="false" ClientInstanceName="colBankAccount" DataSourceID="sdsBankAccount" KeyFieldName="BankAccountCode"  OnLoad="gvLookupLoad" TextFormatString="{0}" Width="115px">
                                                                                    <GridViewProperties Settings-ShowFilterRow="true">
                                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True" />
                                                                                    </GridViewProperties>
                                                                                    <Columns>
                                                                                        <dx:GridViewDataTextColumn FieldName="BankAccountCode" ReadOnly="True" VisibleIndex="0">
                                                                                            <Settings AutoFilterCondition="Contains" />
                                                                                        </dx:GridViewDataTextColumn>
                                                                                        <dx:GridViewDataTextColumn FieldName="Description" ReadOnly="True" VisibleIndex="1">
                                                                                        </dx:GridViewDataTextColumn>
                                                                                    </Columns>    
																					<ClientSideEvents KeyPress="gvCredit_KeyPress" KeyDown="gvCredit_KeyDown" CloseUp="gvCredit_CloseUp"/>                                                                           
                                                                                </dx:ASPxGridLookup>
                                                                            </EditItemTemplate>
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataDateColumn Caption="Date Deposited" FieldName="DateDeposited" Name="cDateDeposited" ShowInCustomizationForm="True" VisibleIndex="4" Width="100px">
                                                                            <PropertiesDateEdit DisplayFormatString="MM/d/yyyy">
                                                                            </PropertiesDateEdit>
                                                                        </dx:GridViewDataDateColumn>
                                                                        <dx:GridViewDataSpinEditColumn Caption="Amount Deposited" FieldName="AmountDeposited" Name="cAmountDeposited" ShowInCustomizationForm="True" VisibleIndex="5" Width="115px">
                                                                            <PropertiesSpinEdit Increment="0" ClientInstanceName ="cAmountDeposited" NullDisplayText="0.00" ConvertEmptyStringToNull="False" NullText="0.00" MinValue="0" DisplayFormatString="{0:N}" SpinButtons-ShowIncrementButtons="false" AllowMouseWheel="False" MaxValue="9999999999">
                                                                            <SpinButtons ShowIncrementButtons="False"></SpinButtons>
                                                                            <ClientSideEvents ValueChanged="autocalculate" />
                                                                            </PropertiesSpinEdit>
                                                                        </dx:GridViewDataSpinEditColumn>
                                                                    </Columns>
                                                                </dx:ASPxGridView>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                </Items>
                                            </dx:LayoutGroup>
                                            <dx:LayoutGroup Caption="Check Details"  Name="ReceivedChecks">
                                                <Items>
                                                    <dx:LayoutItem Caption="">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxGridView ID="gvChecks" runat="server" AutoGenerateColumns="False" Width="770px" ClientInstanceName="gvChecks" OnBatchUpdate="gvChecks_BatchUpdate" 
                                                                    OnCellEditorInitialize="gv1_CellEditorInitialize" OnCommandButtonInitialize="gvReceipts_CommandButtonInitialize" OnCustomButtonInitialize="gvReceipts_CustomButtonInitialize"
                                                                    OnInit="gvChecks_Init" OnRowValidating="grid_RowValidating" KeyFieldName ="LineNumber" OnInitNewRow="gvChecks_InitNewRow">
                                                                    <ClientSideEvents Init="OnInitTrans" BatchEditConfirmShowing="OnConfirm" BatchEditEndEditing="OnEndEditing" BatchEditStartEditing="OnStartEditing_gvReceipts" CustomButtonClick="OnCustomClick" />
                                                                    <SettingsPager Mode="ShowAllRecords">
                                                                    </SettingsPager>
                                                                    <SettingsEditing Mode="Batch">
                                                                    </SettingsEditing>
                                                                    <Settings ColumnMinWidth="120" HorizontalScrollBarMode="Visible" VerticalScrollableHeight="130" VerticalScrollBarMode="Auto" />
                                                                    <SettingsBehavior AllowSort="False" />
                                                                    <Columns>
                                                                        <dx:GridViewCommandColumn ButtonType="Image" ShowInCustomizationForm="True" VisibleIndex="0" Width="30px" ShowNewButtonInHeader="True">
                                                                            <CustomButtons>
                                                                                <dx:GridViewCommandColumnCustomButton ID="ChecksDelete">
                                                                                <Image IconID="actions_cancel_16x16"> </Image>
                                                                                </dx:GridViewCommandColumnCustomButton>
                                                                            </CustomButtons>
                                                                        </dx:GridViewCommandColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Line Number" FieldName="LineNumber" Name="xLineNumber" ReadOnly="True" ShowInCustomizationForm="True" VisibleIndex="1">
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Bank" FieldName="Bank" Name="xBank" ShowInCustomizationForm="True" VisibleIndex="2" Width="100px">
                                                                            <EditItemTemplate>
                                                                                <dx:ASPxGridLookup ID="glBank" runat="server" AutoGenerateColumns="False" AutoPostBack="false" ClientInstanceName="colBank" DataSourceID="sdsBank"
                                                                                    KeyFieldName="Bank;Branch;AccountNo"  OnLoad="gvLookupLoad" TextFormatString="{0}" Width="100px" OnInit="glBank_Init">
                                                                                    <GridViewProperties Settings-ShowFilterRow="true">
                                                                                        <SettingsBehavior AllowFocusedRow="True" AllowSelectByRowClick="True" />
                                                                                    </GridViewProperties>
                                                                                    <ClientSideEvents RowClick="function(s,e) { 
                                                                                        s.GetRowValues(e.visibleIndex, 'Bank;Branch', OnGetRowValues);
                                                                                    }" />
                                                                                    <Columns>
                                                                                        <dx:GridViewDataTextColumn FieldName="Bank" ReadOnly="True" VisibleIndex="0">
                                                                                            <Settings AutoFilterCondition="Contains" />
                                                                                        </dx:GridViewDataTextColumn>
                                                                                        <dx:GridViewDataTextColumn FieldName="Description" ReadOnly="True" VisibleIndex="1">
                                                                                            <Settings AutoFilterCondition="Contains" />
                                                                                        </dx:GridViewDataTextColumn>
                                                                                        <dx:GridViewDataTextColumn FieldName="Branch" ReadOnly="True" VisibleIndex="2">
                                                                                            <Settings AutoFilterCondition="Contains" />
                                                                                        </dx:GridViewDataTextColumn>
                                                                                        <dx:GridViewDataTextColumn FieldName="AccountNo" ReadOnly="True" VisibleIndex="3">
                                                                                            <Settings AutoFilterCondition="Contains" />
                                                                                        </dx:GridViewDataTextColumn>
                                                                                    </Columns>
																					<ClientSideEvents KeyPress="gvChecks_KeyPress" KeyDown="gvChecks_KeyDown" CloseUp="gvChecks_CloseUp" />
<%--                                                                                        ValueChanged="function(s,e)
                                                                                        {
                                                                                            loader.SetText('Loading...'); loader.Show(); 
                                                                                            setTimeout( function() { 
                                                                                                var g = colBank.GetGridView(); 
                                                                                                g.GetRowValues(g.GetFocusedRowIndex(), 'Bank;Branch', OnGetRowValues); 
                                                                                                loader.Hide();
                                                                                            },1000)
                                                                                        }"/>                                                                            --%>
                                                                                </dx:ASPxGridLookup>
                                                                            </EditItemTemplate>
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Branch" FieldName="Branch" Name="xBranch" ShowInCustomizationForm="True" VisibleIndex="3" Width="100px" ReadOnly="true">
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Check Number" FieldName="CheckNumber" Name="xCheckNumber" ShowInCustomizationForm="True" VisibleIndex="4" Width="150px">
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataDateColumn Caption="Check Date" FieldName="CheckDate" Name="xCheckDate" ShowInCustomizationForm="True" VisibleIndex="5" Width="100px" PropertiesDateEdit-AllowNull="true" >
                                                                            <PropertiesDateEdit DisplayFormatString="MM/d/yyyy">
                                                                            </PropertiesDateEdit>
                                                                        </dx:GridViewDataDateColumn>
                                                                        <dx:GridViewDataSpinEditColumn Caption="Check Amount" FieldName="CheckAmount" Name="xCheckAmount" ShowInCustomizationForm="True" VisibleIndex="6" Width="150px">
                                                                            <PropertiesSpinEdit Increment="0" ClientInstanceName ="xCheckAmount" NullDisplayText="0.00" ConvertEmptyStringToNull="False" NullText="0.00"  DisplayFormatString="{0:N}" SpinButtons-ShowIncrementButtons="false" AllowMouseWheel="False" MaxValue="9999999999">
                                                                            <SpinButtons ShowIncrementButtons="False"></SpinButtons>
                                                                            <ClientSideEvents ValueChanged="autocalculate" />
                                                                            </PropertiesSpinEdit>
                                                                        </dx:GridViewDataSpinEditColumn>
                                                                    </Columns>
                                                                </dx:ASPxGridView>
                                                                <dx:ASPxLoadingPanel ID="ASPxLoadingPanel1" runat="server" Text="Loading..."
                                                                    ClientInstanceName="loader" ContainerElementID="gvChecks" Modal="true">
                                                                    <LoadingDivStyle Opacity="0"></LoadingDivStyle>
                                                                </dx:ASPxLoadingPanel>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                </Items>
                                            </dx:LayoutGroup>
                                            <dx:LayoutGroup Caption="Maturing Checks" Name="MaturingChecks">
                                                <Items>
                                                    <dx:LayoutItem Caption="Ref AR Number">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <table>
                                                                    <tr>
                                                                        <td>  
                                                                            <dx:ASPxGridLookup ID="aglARChecks" runat="server" DataSourceID="sdsRefARChecks" SelectionMode="Multiple" Width="1000px"
                                                                                KeyFieldName="RecordID" OnLoad="LookupLoad" TextFormatString="{0}" OnInit="aglARChecks_Init" ClientInstanceName="aglARChecks">
                                                                                <GridViewProperties>
                                                                                    <SettingsBehavior AllowFocusedRow="True" />
                                                                                    <Settings ShowFilterRow="True" />
                                                                                </GridViewProperties>
                                                                                <Columns>
                                                                                    <dx:GridViewCommandColumn ShowInCustomizationForm="True" ShowSelectCheckbox="True" VisibleIndex="0" Width="30px">
                                                                                    </dx:GridViewCommandColumn>
                                                                                    <dx:GridViewDataTextColumn FieldName="RecordID" ReadOnly="True" ShowInCustomizationForm="True" VisibleIndex="0">
                                                                                        <Settings AutoFilterCondition="Contains" />
                                                                                    </dx:GridViewDataTextColumn>
                                                                                    <dx:GridViewDataTextColumn FieldName="Bank" ReadOnly="True" ShowInCustomizationForm="True" VisibleIndex="1">
                                                                                        <Settings AutoFilterCondition="Contains" />
                                                                                    </dx:GridViewDataTextColumn>
                                                                                    <dx:GridViewDataTextColumn FieldName="Branch" ReadOnly="True" ShowInCustomizationForm="True" VisibleIndex="2">
                                                                                        <Settings AutoFilterCondition="Contains" />
                                                                                    </dx:GridViewDataTextColumn>
                                                                                    <dx:GridViewDataTextColumn FieldName="CheckNumber" ReadOnly="True" ShowInCustomizationForm="True" VisibleIndex="3">
                                                                                        <Settings AutoFilterCondition="Contains" />
                                                                                    </dx:GridViewDataTextColumn>
                                                                                    <dx:GridViewDataDateColumn FieldName="CheckDate" ShowInCustomizationForm="True" VisibleIndex="4" Width="100px" ReadOnly ="true">
                                                                                        <PropertiesDateEdit DisplayFormatString="MM/dd/yyyy" AllowMouseWheel="false" DropDownButton-Enabled="false" DropDownButton-ClientVisible ="false">
                                                                                        <DropDownButton Enabled="False" ClientVisible="False"></DropDownButton>
                                                                                        </PropertiesDateEdit>
                                                                                        <Settings AutoFilterCondition="Contains" />
                                                                                    </dx:GridViewDataDateColumn>
                                                                                    <dx:GridViewDataTextColumn FieldName="CheckAmount" ReadOnly="True" ShowInCustomizationForm="True" VisibleIndex="5">
                                                                                        <PropertiesTextEdit DisplayFormatString="{0:N}" />
                                                                                        <Settings AutoFilterCondition="Contains" />
                                                                                    </dx:GridViewDataTextColumn>
                                                                                </Columns>                                                                  
                                                                            </dx:ASPxGridLookup>
                                                                        </td>
                                                                        <td>
		                                                                    <dx:ASPxButton ID="btnGenerate" runat="server" AutoPostBack="False" Width="170px" Theme="MetropolisBlue" Text="Populate Detail" OnLoad="Button_Load">
                                                                                <ClientSideEvents Click="function(s, e) { cp.PerformCallback('CallbackARChecks'); }" />
                                                                            </dx:ASPxButton>
                                                                        </td>
                                                                    </tr>
                                                                </table>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                    <dx:LayoutItem Caption="">
                                                        <LayoutItemNestedControlCollection>
                                                            <dx:LayoutItemNestedControlContainer runat="server">
                                                                <dx:ASPxGridView ID="gvARChecks" runat="server" AutoGenerateColumns="False" Width="770px" ClientInstanceName="gvARChecks" OnBatchUpdate="gvARChecks_BatchUpdate" 
                                                                    OnCellEditorInitialize="gv1_CellEditorInitialize" OnCommandButtonInitialize="gv_CommandButtonInitialize" OnCustomButtonInitialize="gv1_CustomButtonInitialize"
                                                                    OnInit="gvARChecks_Init" OnRowValidating="grid_RowValidating" KeyFieldName ="RecordID">
                                                                    <ClientSideEvents Init="OnInitTrans" BatchEditConfirmShowing="OnConfirm" BatchEditEndEditing="OnEndEditing" BatchEditStartEditing="OnStartEditing" CustomButtonClick="OnCustomClick" />
                                                                    <SettingsPager Mode="ShowAllRecords">
                                                                    </SettingsPager>
                                                                    <SettingsEditing Mode="Batch">
                                                                    </SettingsEditing>
                                                                    <Settings ColumnMinWidth="120" HorizontalScrollBarMode="Visible" VerticalScrollableHeight="130" VerticalScrollBarMode="Auto" />
                                                                    <SettingsBehavior AllowSort="False" />
                                                                    <Columns>
                                                                        <dx:GridViewCommandColumn ButtonType="Image" ShowInCustomizationForm="True" VisibleIndex="0" Width="30px" ShowNewButtonInHeader="False">
                                                                            <CustomButtons>
                                                                                <dx:GridViewCommandColumnCustomButton ID="ARChecksDelete">
                                                                                <Image IconID="actions_cancel_16x16"> </Image>
                                                                                </dx:GridViewCommandColumnCustomButton>
                                                                            </CustomButtons>
                                                                        </dx:GridViewCommandColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Line Number" FieldName="LineNumber" Name="aLineNumber" ShowInCustomizationForm="True" VisibleIndex="1" ReadOnly ="true">
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Bank" FieldName="Bank" ShowInCustomizationForm="True" VisibleIndex="2" Width="100px">
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Branch" FieldName="Branch" ShowInCustomizationForm="True" VisibleIndex="3" Width="100px" ReadOnly="true">
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataTextColumn Caption="Check Number" FieldName="CheckNumber" ShowInCustomizationForm="True" VisibleIndex="4" Width="150px">
                                                                        </dx:GridViewDataTextColumn>
                                                                        <dx:GridViewDataDateColumn Caption="Check Date" FieldName="CheckDate" ShowInCustomizationForm="True" VisibleIndex="5" Width="100px" PropertiesDateEdit-AllowNull="true" >
                                                                            <PropertiesDateEdit DisplayFormatString="MM/d/yyyy">
                                                                            </PropertiesDateEdit>
                                                                        </dx:GridViewDataDateColumn>
                                                                        <dx:GridViewDataSpinEditColumn Caption="Check Amount" FieldName="CheckAmount" ShowInCustomizationForm="True" VisibleIndex="6" Width="150px">
                                                                            <PropertiesSpinEdit Increment="0" ClientInstanceName ="ARCheckAmount" NullDisplayText="0.00" ConvertEmptyStringToNull="False" NullText="0.00"  DisplayFormatString="{0:N}" SpinButtons-ShowIncrementButtons="false" AllowMouseWheel="False" MaxValue="9999999999">
                                                                            <SpinButtons ShowIncrementButtons="False"></SpinButtons>
                                                                            </PropertiesSpinEdit>
                                                                        </dx:GridViewDataSpinEditColumn>
                                                                        <dx:GridViewDataTextColumn FieldName="RecordID" Caption="RecordID" ShowInCustomizationForm="True" VisibleIndex="7" Width="0px" >
                                                                        </dx:GridViewDataTextColumn>
                                                                    </Columns>
                                                                </dx:ASPxGridView>
                                                            </dx:LayoutItemNestedControlContainer>
                                                        </LayoutItemNestedControlCollection>
                                                    </dx:LayoutItem>
                                                </Items>
                                            </dx:LayoutGroup>
                                        </Items>
                                    </dx:LayoutGroup>
                                    <dx:LayoutGroup Caption="User Defined" ColCount="2">
                                        <Items>
                                            <dx:LayoutItem Caption="Field1">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField1" runat="server" OnLoad="TextboxLoad">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Field2">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField2" runat="server" OnLoad="TextboxLoad">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Field3">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField3" runat="server" OnLoad="TextboxLoad">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Field4">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField4" runat="server" OnLoad="TextboxLoad">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Field5">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField5" runat="server" OnLoad="TextboxLoad">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Field6">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField6" runat="server" OnLoad="TextboxLoad">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Field7">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField7" runat="server" OnLoad="TextboxLoad">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Field8">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField8" runat="server" OnLoad="TextboxLoad">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Field9">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHField9" runat="server" OnLoad="TextboxLoad">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                        </Items>
                                    </dx:LayoutGroup>
                                    <dx:LayoutGroup Caption="Journal Entries">
                                        <Items>
                                            <dx:LayoutItem Caption="">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxGridView ID="gvJournal" runat="server" AutoGenerateColumns="False" Width="1000px" ClientInstanceName="gvJournal"  KeyFieldName="RTransType;TransType"  >
                                                            <ClientSideEvents Init="OnInitTrans" BatchEditConfirmShowing="OnConfirm" CustomButtonClick="OnCustomClick"  />
                                                            <SettingsPager Mode="ShowAllRecords" />  
                                                            <SettingsEditing Mode="Batch"/>
                                                            <Settings HorizontalScrollBarMode="Visible" VerticalScrollBarMode="Auto" ColumnMinWidth="120" VerticalScrollableHeight="130"  /> 
                                                            <SettingsBehavior AllowSort="False"></SettingsBehavior>
                                                            <SettingsDataSecurity AllowDelete="False" AllowEdit="False" AllowInsert="False" />
                                                            <Columns>
                                                                <dx:GridViewDataTextColumn FieldName="AccountCode" Name="jAccountCode" ShowInCustomizationForm="True" VisibleIndex="0" Width ="100px" Caption="Account Code" >
                                                                </dx:GridViewDataTextColumn>
                                                                <dx:GridViewDataTextColumn FieldName="AccountDescription" Name="jAccountDescription" ShowInCustomizationForm="True" VisibleIndex="1" Width ="150px" Caption="Account Description" >
                                                                </dx:GridViewDataTextColumn>
																<dx:GridViewDataTextColumn FieldName="SubsidiaryCode" Name="jSubsidiaryCode" ShowInCustomizationForm="True" VisibleIndex="2" Width ="120px" Caption="Subsidiary Code" >
                                                                </dx:GridViewDataTextColumn>
                                                                <dx:GridViewDataTextColumn FieldName="SubsidiaryDescription" Name="jSubsidiaryDescription" ShowInCustomizationForm="True" VisibleIndex="3" Width ="150px" Caption="Subsidiary Description" >
                                                                </dx:GridViewDataTextColumn>																
																<dx:GridViewDataTextColumn FieldName="ProfitCenter" Name="jProfitCenter" ShowInCustomizationForm="True" VisibleIndex="4" Width ="120px" Caption="Profit Center" >
                                                                </dx:GridViewDataTextColumn>
                                                                <dx:GridViewDataTextColumn FieldName="CostCenter" Name="jCostCenter" ShowInCustomizationForm="True" VisibleIndex="5" Width ="120px" Caption="Cost Center" >
                                                                </dx:GridViewDataTextColumn>
                                                                <dx:GridViewDataSpinEditColumn FieldName="Debit" Name="jDebit" ShowInCustomizationForm="True" VisibleIndex="6" Width="120px" Caption="Debit Amount" >
                                                                    <PropertiesSpinEdit Increment="0" NullDisplayText="0.00" ConvertEmptyStringToNull="False" NullText="0.00"  DisplayFormatString="{0:N}" SpinButtons-ShowIncrementButtons="false" AllowMouseWheel="False">
                                                                    <SpinButtons ShowIncrementButtons="False"></SpinButtons>
                                                                    </PropertiesSpinEdit>
                                                                </dx:GridViewDataSpinEditColumn>                                                                
                                                                <dx:GridViewDataSpinEditColumn FieldName="Credit" Name="jCredit" ShowInCustomizationForm="True" VisibleIndex="7" Width="120px" Caption="Credit Amount" >
                                                                    <PropertiesSpinEdit Increment="0" NullDisplayText="0.00" ConvertEmptyStringToNull="False" NullText="0.00"  DisplayFormatString="{0:N}" SpinButtons-ShowIncrementButtons="false" AllowMouseWheel="False">
                                                                    <SpinButtons ShowIncrementButtons="False"></SpinButtons>
                                                                    </PropertiesSpinEdit>
                                                                </dx:GridViewDataSpinEditColumn>
                                                            </Columns>
                                                        </dx:ASPxGridView>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                        </Items>
                                    </dx:LayoutGroup>
                                    <dx:LayoutGroup Caption="Audit Trail" ColCount="2">
                                        <Items>
                                            <dx:LayoutItem Caption="Added By">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHAddedBy" runat="server" Width="170px" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Added Date">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHAddedDate" runat="server" Width="170px" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Last Edited By">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHLastEditedBy" runat="server" Width="170px" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Last Edited Date">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHLastEditedDate" runat="server" Width="170px" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Submitted By">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHSubmittedBy" runat="server" Width="170px" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Submitted Date">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtHSubmittedDate" runat="server" Width="170px" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Posted By">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtPostedBy" runat="server" Width="170px" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Posted Date">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtPostedDate" runat="server" Width="170px" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Cancelled By">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtCancelledBy" runat="server" Width="170px" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                            <dx:LayoutItem Caption="Cancelled Date">
                                                <LayoutItemNestedControlCollection>
                                                    <dx:LayoutItemNestedControlContainer runat="server">
                                                        <dx:ASPxTextBox ID="txtCancelledDate" runat="server" Width="170px" ReadOnly="True">
                                                        </dx:ASPxTextBox>
                                                    </dx:LayoutItemNestedControlContainer>
                                                </LayoutItemNestedControlCollection>
                                            </dx:LayoutItem>
                                        </Items>
                                    </dx:LayoutGroup>
                                </Items>
                            </dx:TabbedLayoutGroup>
                        </Items>
                    </dx:ASPxFormLayout>
                    <dx:ASPxPanel id="BottomPanel" runat="server" fixedposition="WindowBottom" backcolor="#FFFFFF" Height="30px">
                        <PanelCollection>
                            <dx:PanelContent runat="server" SupportsDisabledAttribute="True">
                                <div class="pnl-content">
                                <dx:ASPxCheckBox style="display: inline-block;" ID="glcheck" runat="server" ClientInstanceName="glcheck" TextAlign="Left" Text="Prevent auto-close upon update" Width="200px"></dx:ASPxCheckBox>
                                <dx:ASPxButton ID="updateBtn" runat="server" Text="Add" AutoPostBack="False" CssClass="btn" ClientInstanceName="btn"
                                    UseSubmitBehavior="false" CausesValidation="true">
                                    <ClientSideEvents Click="OnUpdateClick" />
                                </dx:ASPxButton>
                                </div>
                            </dx:PanelContent>
                        </PanelCollection>
                    </dx:ASPxPanel>
                    <dx:ASPxPopupControl ID="DeleteControl" runat="server" Width="250px" Height="100px" HeaderText="Warning!"
                    CloseAction="CloseButton" CloseOnEscape="True" Modal="True" ClientInstanceName="DeleteControl"
                    PopupHorizontalAlign="WindowCenter" PopupVerticalAlign="WindowCenter">
                    <ContentCollection>
                        <dx:PopupControlContentControl runat="server">
                            <dx:ASPxLabel ID="ASPxLabel1" runat="server" Text="Are you sure you want to delete this specific document?" />
                            <table>
                                <tr>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                 <td><dx:ASPxButton ID="Ok" runat="server" Text="Ok" UseSubmitBehavior="false" AutoPostBack="false">
                                     <ClientSideEvents Click="function (s, e){ cp.PerformCallback('ConfDelete');  e.processOnServer = false;}" />
                                     </dx:ASPxButton>
                                 <td><dx:ASPxButton ID="Cancel" runat="server" Text="Cancel" UseSubmitBehavior="false" AutoPostBack="false">
                                     <ClientSideEvents Click="function (s,e){ DeleteControl.Hide(); }" />
                                     </dx:ASPxButton> 
                                </tr>
                            </table>
                        </dx:PopupControlContentControl>
                    </ContentCollection>
                </dx:ASPxPopupControl>
            </dx:PanelContent>
        </PanelCollection>
    </dx:ASPxCallbackPanel>
</form>
    <!--#region Region Datasource-->
    <asp:ObjectDataSource ID="odsHeader" runat="server" DataObjectTypeName="Entity.CollectionReceipt" TypeName="Entity.CollectionReceipt" 
        SelectMethod="getdata" InsertMethod="InsertData" UpdateMethod="UpdateData" DeleteMethod="DeleteData">
        <SelectParameters>
            <asp:QueryStringParameter Name="DocNumber" QueryStringField="docnumber" Type="String" />
        </SelectParameters>
    </asp:ObjectDataSource>
    <asp:ObjectDataSource ID="odsCredit" runat="server" DataObjectTypeName="Entity.CollectionReceipt+CollectionCredit" 
        TypeName="Entity.CollectionReceipt+CollectionCredit" 
        SelectMethod="getCredit" InsertMethod="AddCollectionCredit" 
        UpdateMethod="UpdateCollectionCredit" DeleteMethod="DeleteCollectionCredit">
        <SelectParameters>
            <asp:QueryStringParameter Name="DocNumber" QueryStringField="docnumber" Type="String" />
            <asp:SessionParameter Name="Conn" SessionField="ConnString" Type="String" /> 
        </SelectParameters>
    </asp:ObjectDataSource>
    <asp:ObjectDataSource ID="odsChecks" runat="server" DataObjectTypeName="Entity.CollectionReceipt+CollectionChecks" 
        TypeName="Entity.CollectionReceipt+CollectionChecks" 
        SelectMethod="getChecks" InsertMethod="AddCollectionChecks" 
        UpdateMethod="UpdateCollectionChecks" DeleteMethod="DeleteCollectionChecks" >
        <SelectParameters>
            <asp:QueryStringParameter Name="DocNumber" QueryStringField="docnumber" Type="String" />
            <asp:SessionParameter Name="Conn" SessionField="ConnString" Type="String" /> 
        </SelectParameters>
    </asp:ObjectDataSource>
    <asp:ObjectDataSource ID="odsARChecks" runat="server" DataObjectTypeName="Entity.CollectionReceipt+CollectionARChecks" 
        TypeName="Entity.CollectionReceipt+CollectionARChecks" 
        SelectMethod="getARChecks" InsertMethod="AddCollectionARChecks" 
        UpdateMethod="UpdateCollectionARChecks" DeleteMethod="DeleteCollectionARChecks">
        <SelectParameters>
            <asp:QueryStringParameter Name="DocNumber" QueryStringField="docnumber" Type="String" />
            <asp:SessionParameter Name="Conn" SessionField="ConnString" Type="String" /> 
        </SelectParameters>
    </asp:ObjectDataSource>
    <asp:ObjectDataSource ID="odsJournalEntry" runat="server" SelectMethod="getJournalEntry" TypeName="Entity.CollectionReceipt+JournalEntry" >
        <SelectParameters>
            <asp:QueryStringParameter Name="DocNumber" QueryStringField="docnumber" Type="String" />
            <asp:SessionParameter Name="Conn" SessionField="ConnString" Type="String" /> 
        </SelectParameters>
    </asp:ObjectDataSource>
    <asp:SqlDataSource ID="sdsARChecks" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" 
        SelectCommand="SELECT RefARNumber+'/'+RefARLineNum AS RecordID, * FROM Accounting.CollectionARChecks WHERE DocNumber IS NULL" OnInit ="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsChecks" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" 
        SelectCommand="SELECT DocNumber AS RecordID, * FROM Accounting.CollectionChecks WHERE DocNumber IS NULL" OnInit ="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsCredit" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" 
        SelectCommand="SELECT DocNumber AS RecrodID, * FROM Accounting.CollectionCredit WHERE DocNumber IS NULL" OnInit ="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsRefARChecks" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" 
        SelectCommand="
        SELECT CHK.DocNumber+'/'+LineNumber AS RecordID, 
               Bank, Branch, CheckNumber, CheckDate, CheckAmount
          FROM Accounting.CollectionChecks CHK
               INNER JOIN Accounting.Collection COL
               ON CHK.DocNumber = COL.DocNumber
         WHERE CHK.DocNumber IS NULL AND CollReceiptNum IS NULL AND
        	   ISNULL(COL.SubmittedBy,'') = '' AND COL.ReceiptType = 'A'" 
        OnInit ="Connection_Init"></asp:SqlDataSource>	
    <asp:SqlDataSource ID="sdsARChecksDtl" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" 
        SelectCommand="
        SELECT RIGHT('00000'+ CONVERT(varchar,ROW_NUMBER() OVER (ORDER BY DocNumber,LineNumber)),5) AS LineNumber, 
	           CHK.DocNumber+'/'+LineNumber AS RecordID, 
	           Bank, Branch, CheckNumber, CheckDate, CheckAmount
          FROM Accounting.CollectionChecks CHK
               INNER JOIN Accounting.Collection COL
               ON CHK.DocNumber = COL.DocNumber
         WHERE CHK.DocNumber IS NULL AND CollReceiptNum IS NULL AND
	           ISNULL(COL.SubmittedBy,'') = '' AND COL.ReceiptType = 'A' "
        OnInit ="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsChecksDtl" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT * FROM Accounting.CollectionChecks WHERE DocNumber IS NULL" OnInit ="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsCreditDtl" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT * FROM Accounting.CollectionCredit WHERE DocNumber IS NULL" OnInit ="Connection_Init"></asp:SqlDataSource>

    <asp:SqlDataSource ID="sdsBizPartnerCus" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT DISTINCT BizPartnerCode, Name FROM Masterfile.BPCustomerInfo WHERE ISNULL(IsInActive,0)=0" OnInit ="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsBizPartner" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT BizPartnerCode, Name FROM Masterfile.BizPartner WHERE ISNULL(IsInactive,0) = 0" OnInit ="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsBizAccount" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT BizAccountCode AS BizAccount, BizAccountName AS Name FROM Masterfile.BizAccount WHERE ISNULL(IsInactive,0) = 0 " OnInit ="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsBankAccount" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT BankAccountCode, Description FROM Masterfile.BankAccount WHERE ISNULL(IsInactive,0) = 0 " OnInit ="Connection_Init"></asp:SqlDataSource>  
    <asp:SqlDataSource ID="sdsBank" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT DISTINCT A.BankCode AS Bank, C.Description, A.AccountNo, A.Branch FROM Masterfile.BPBankInfo A INNER JOIN Masterfile.BizPartner B ON A.BizPartnerCode = B.BizPartnerCode LEFT JOIN Masterfile.Bank C ON A.BankCode = C.BankCode " OnInit = "Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsBranch" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT DISTINCT A.Branch FROM Masterfile.BPBankInfo A INNER JOIN Masterfile.BizPartner B ON A.BizPartnerCode = B.BizPartnerCode" OnInit ="Connection_Init"></asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsCurrency" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT Currency, CurrencyName FROM Masterfile.Currency WHERE ISNULL(IsInactive,0) = 0" OnInit = "Connection_Init"> </asp:SqlDataSource>
    <asp:SqlDataSource ID="sdsCollector" runat="server" ConnectionString="<%$ ConnectionStrings:GEARS-METSITConnectionString %>" SelectCommand="SELECT DISTINCT A.Collector, B.FirstName + ' ' + B.LastName AS Name FROM Masterfile.BPCustomerInfo A INNER JOIN Masterfile.BPEmployeeInfo B ON A.Collector = B.EmployeeCode WHERE ISNULL(B.IsInactive,0) = 0" OnInit = "Connection_Init"> </asp:SqlDataSource>
    <!--#endregion-->
</body>
</html>


